{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/pages/login/login.component.ts","webpack:///src/app/auth/pages/login/login.component.html","webpack:///src/app/auth/pages/sign-up/sign-up.component.ts","webpack:///src/app/auth/pages/sign-up/sign-up.component.html","webpack:///src/app/auth/shared/directives/confirm-password.directive.ts","webpack:///src/app/auth/shared/directives/validate-form.directive.ts","webpack:///src/app/auth/shared/endpoints.ts","webpack:///src/app/auth/shared/guards/logged/logged.guard.ts","webpack:///src/app/auth/shared/guards/not-logged/not-logged.guard.ts","webpack:///src/app/auth/shared/services/auth/auth.service.ts","webpack:///src/app/config.ts","webpack:///src/app/favourites/favourites-routing.module.ts","webpack:///src/app/favourites/favourites.module.ts","webpack:///src/app/favourites/pages/favourites/favourites.component.ts","webpack:///src/app/favourites/pages/favourites/favourites.component.html","webpack:///src/app/favourites/shared/endpoints.ts","webpack:///src/app/favourites/shared/services/favourite/favourite.service.ts","webpack:///src/app/genres/shared/endpoints.ts","webpack:///src/app/genres/shared/services/genre/genre.service.ts","webpack:///src/app/movies/components/movie-cast-member-image/movie-cast-member-image.component.ts","webpack:///src/app/movies/components/movie-cast-member-image/movie-cast-member-image.component.html","webpack:///src/app/movies/components/movie-cast/movie-cast.component.ts","webpack:///src/app/movies/components/movie-cast/movie-cast.component.html","webpack:///src/app/movies/components/movie-go-back/movie-go-back.component.ts","webpack:///src/app/movies/components/movie-go-back/movie-go-back.component.html","webpack:///src/app/movies/components/movie-info/movie-info.component.ts","webpack:///src/app/movies/components/movie-info/movie-info.component.html","webpack:///src/app/movies/components/movie-personal-note/movie-personal-note.component.ts","webpack:///src/app/movies/components/movie-personal-note/movie-personal-note.component.html","webpack:///src/app/movies/components/movie-recommendations/movie-recommendations.component.ts","webpack:///src/app/movies/components/movie-recommendations/movie-recommendations.component.html","webpack:///src/app/movies/components/movie-review/movie-review.component.ts","webpack:///src/app/movies/components/movie-review/movie-review.component.html","webpack:///src/app/movies/components/movie-reviews/movie-reviews.component.ts","webpack:///src/app/movies/components/movie-reviews/movie-reviews.component.html","webpack:///src/app/movies/components/movie-title/movie-title.component.ts","webpack:///src/app/movies/components/movie-title/movie-title.component.html","webpack:///src/app/movies/movies-routing.module.ts","webpack:///src/app/movies/movies.module.ts","webpack:///src/app/movies/pages/home/home.component.ts","webpack:///src/app/movies/pages/home/home.component.html","webpack:///src/app/movies/pages/movie-all-reviews/movie-all-reviews.component.ts","webpack:///src/app/movies/pages/movie-all-reviews/movie-all-reviews.component.html","webpack:///src/app/movies/pages/movie-details/movie-details.component.ts","webpack:///src/app/movies/pages/movie-details/movie-details.component.html","webpack:///src/app/movies/pages/movie-full-cast/movie-full-cast.component.ts","webpack:///src/app/movies/pages/movie-full-cast/movie-full-cast.component.html","webpack:///src/app/movies/pages/movie-full-review/movie-full-review.component.ts","webpack:///src/app/movies/pages/movie-full-review/movie-full-review.component.html","webpack:///src/app/movies/shared/endpoints.ts","webpack:///src/app/movies/shared/services/movie/movie.service.ts","webpack:///src/app/navigation/components/navigation/navigation.component.ts","webpack:///src/app/navigation/components/navigation/navigation.component.html","webpack:///src/app/navigation/components/search-result/search-result.component.ts","webpack:///src/app/navigation/components/search-result/search-result.component.html","webpack:///src/app/navigation/components/search/search.component.ts","webpack:///src/app/navigation/components/search/search.component.html","webpack:///src/app/navigation/navigation.module.ts","webpack:///src/app/navigation/shared/endpoints.ts","webpack:///src/app/navigation/shared/services/search/search.service.ts","webpack:///src/app/store/auth/auth.actions.ts","webpack:///src/app/store/auth/auth.effects.ts","webpack:///src/app/store/auth/auth.reducer.ts","webpack:///src/app/store/auth/auth.state.ts","webpack:///src/app/store/favourites/favourites.actions.ts","webpack:///src/app/store/favourites/favourites.effects.ts","webpack:///src/app/store/favourites/favourites.reducer.ts","webpack:///src/app/store/favourites/favourites.state.ts","webpack:///src/app/store/movies/movies.actions.ts","webpack:///src/app/store/movies/movies.effects.ts","webpack:///src/app/store/movies/movies.reducer.ts","webpack:///src/app/store/movies/movies.state.ts","webpack:///src/app/ui/components/image/image.module.ts","webpack:///src/app/ui/components/image/image/image.component.ts","webpack:///src/app/ui/components/image/image/image.component.html","webpack:///src/app/ui/components/movie-card/movie-card.module.ts","webpack:///src/app/ui/components/movie-card/movie-card/movie-card.component.ts","webpack:///src/app/ui/components/movie-card/movie-card/movie-card.component.html","webpack:///src/app/ui/components/movie-card/movie-rating/movie-rating.component.ts","webpack:///src/app/ui/components/movie-card/movie-rating/movie-rating.component.html","webpack:///src/app/ui/components/read-more/read-more.module.ts","webpack:///src/app/ui/components/read-more/read-more/read-more.component.ts","webpack:///src/app/ui/components/read-more/read-more/read-more.component.html","webpack:///src/app/ui/directives/click-outside/click-outside.directive.ts","webpack:///src/app/ui/directives/directives.module.ts","webpack:///src/app/ui/pipes/duration/duration.pipe.ts","webpack:///src/app/ui/pipes/genres/genres.pipe.ts","webpack:///src/app/ui/pipes/markdown/markdown.pipe.ts","webpack:///src/app/ui/pipes/pipes.module.ts","webpack:///src/app/ui/pipes/rating-percent/rating-percent.pipe.ts","webpack:///src/app/ui/services/request/request.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","MoviesModule","AuthModule","FavouritesModule","AppRoutingModule","forRoot","scrollPositionRestoration","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","auth","favourites","instrument","name","declarations","providers","bootstrap","component","canActivate","AuthRouting","forChild","LoginComponent","router","route","store","actions$","loginForm","email","required","password","minLength","loginFailed","destroyed$","queryParamMap","subscribe","paramMap","refUrl","get","pipe","type","navigate","valid","dispatch","payload","value","next","complete","submit","SignUpComponent","authService","signUpForm","confirmPassword","validators","signUpFailed","confirmPasswordValidator","control","passwordsNoMatch","validateForm","formGroup","Object","controls","forEach","field","markAsTouched","onlySelf","validateAllFormFields","login","signUp","LoggedGuard","loggedIn$","state","loggedIn","providedIn","NotLoggedGuard","data","AuthService","request","loggedUser","logged","request$","post","key","apiUrl","apiKey","authUrl","authKey","dataUrl","dataKey","FavouritesRouting","FavouritesComponent","favourites$","values","localId","putFavourite","movieId","FavouriteService","movie","put","personalNote","patch","genres","GenreService","genres$","api_key","getGenres","genre","ids","includes","MovieCastMemberImageComponent","size","MovieCastComponent","movieService","showMembersCount","fullCast$","getCast","cast$","member","MovieGoBackComponent","text","link","MovieInfoComponent","favourite$","movieOverview","undefined","getMovieObject","queryParams","ref","url","genre_ids","map","MoviePersonalNoteComponent","personalNoteForm","note","setValue","MovieRecommendationsComponent","recommendations$","getRecommendations","MovieReviewComponent","length","parseInt","review","readMoreClicked","MovieReviewsComponent","showReviewsCount","allReviews$","getReviews","reviews$","MovieTitleComponent","MoviesRoutingModule","forFeature","HomeComponent","pageId","movies$","movies","popularMovies","currentPage","page","loadMore","MovieAllReviewsComponent","movieOverview$","getMovieDetails","MovieDetailsComponent","favourited$","MovieFullCastComponent","MovieFullReviewComponent","refText","split","pop","reviewId","review$","moviePopular","movieDetails","movieCast","movieReviews","movieRecommnedations","MovieService","toString","results","cast","NavigationComponent","opened","menuClicked","linkClicked","SearchResultComponent","SearchComponent","searchService","searchForm","query","searchOpen","searchResults","searchResult","search","valueChanges","unsubscribe","closeSearch","openSearch","NavigationModule","SearchService","genreService","searchRequest","subscriber","original_title","release_date","poster_path","getGenresByIds","toPromise","push","loginSuccess","signUpSuccess","logout","AuthEffects","login$","action","loginResult","signUp$","loginSuccess$","_authReducer","authReducer","initialState","getFavourites","getFavouritesSuccess","addMovieToFavourites","addMovieToFavouritesSuccess","removeMovieFromFavourites","removeMovieFromFavouritesSuccess","addPersonalNoteToFavourite","addPersonalNoteToFavouriteSuccess","FavouriteEffects","favouriteService","getFavourites$","getAll","addMovieToFavourites$","removeMovieFromFavourites$","addPersonalNoteToFavourite$","_favouritesReducer","favourite","favouritesReducer","nextPage","nextPageSuccess","MovieEffects","nextPage$","getPopularMovies","_moviesReducer","moviesReducer","ImageModule","ImageComponent","baseUrl","posterSize","aspectRatio","width","height","MovieCardModule","MovieCardComponent","$event","stopPropagation","preventDefault","MovieRatingComponent","suffix","styles","rating","high","normal","low","ReadMoreModule","ReadMoreComponent","readMore","show","showLess","emit","showedContent","content","slice","ClickOutsideDirective","elementRef","appClickOutside","target","clickedInside","nativeElement","contains","DirectivesModule","DurationPipe","hours","Math","floor","minutes","GenresPipe","join","MarkdownPipe","html","linkify","render","startsWith","PipesModule","RatingPercentPipe","min","max","round","RequestService","http","headers","params","body","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,kBAAY,EAAE;AAAA,eACZ;AAAA;AAAA,8CAAiCV,IAAjC,CAAsC,UAACW,CAAD;AAAA,iBAAOA,CAAC,CAACC,YAAT;AAAA,SAAtC,CADY;AAAA;AAFhB,KADqB,EAMrB;AACEH,UAAI,EAAE,MADR;AAEEC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAA,0CAA6BV,IAA7B,CAAkC,UAACW,CAAD;AAAA,iBAAOA,CAAC,CAACE,UAAT;AAAA,SAAlC,CAAN;AAAA;AAFhB,KANqB,EAUrB;AACEJ,UAAI,EAAE,YADR;AAEEC,kBAAY,EAAE;AAAA,eACZ;AAAA;AAAA,sDAAyCV,IAAzC,CAA8C,UAACW,CAAD;AAAA,iBAAOA,CAAC,CAACG,gBAAT;AAAA,SAA9C,CADY;AAAA;AAFhB,KAVqB,CAAvB;;QAyBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAPlB,CACP,6DAAaC,OAAb,CAAqBR,MAArB,EAA6B;AAC3BS,iCAAyB,EAAE;AADA,OAA7B,CADO,CAOkB,EAFjB,4DAEiB;;;;0HAAhBF,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAR5B,sDAQ4B;eARnB;AACRG,iBAAO,EAAE,CACP,6DAAaF,OAAb,CAAqBR,MAArB,EAA6B;AAC3BS,qCAAyB,EAAE;AADA,WAA7B,CADO,CADD;AAMRX,iBAAO,EAAE,CAAC,4DAAD;AAND,S;AAQmB,Q;;;;;;;;;;;;;;;;;;AC5B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaa,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,YAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AAEA;;AACE;;AACF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA6CaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAnBJ,CACP,uEADO,EAEP,oEAFO,EAGP,8EAHO,EAIP,kEAJO,EAKP,4DALO,EAMP,+EANO,EAOP,qEAPO,EAQP,6DARO,EASP,wDAAYR,OAAZ,CAAoB;AAClBS,YAAI,EAAE,qEADY;AAElBC,kBAAU,EAAE;AAFM,OAApB,CATO,EAaP,6DAAcV,OAAd,CAAsB,CAAC,qEAAD,EAAc,sFAAd,CAAtB,CAbO,EAcP,0EAAoBW,UAApB,CAA+B;AAC7BC,YAAI,EAAE;AADuB,OAA/B,CAdO,EAiBP,sEAjBO,CAmBI;;;;0HAGFJ,S,EAAS;AAAA,uBAvBL,2DAuBK;AAvBO,kBAEzB,uEAFyB,EAGzB,oEAHyB,EAIzB,8EAJyB,EAKzB,kEALyB,EAMzB,4DANyB,EAOzB,+EAPyB,EAQzB,qEARyB,EASzB,6DATyB,EASV,2DATU,EASV,gEATU,EASV,yEATU,EAkBzB,sEAlByB;AAuBP,O;AALC,K;;;;;sEAKVA,S,EAAS;cAxBrB,sDAwBqB;eAxBZ;AACRK,sBAAY,EAAE,CAAC,2DAAD,CADN;AAERX,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,8EAHO,EAIP,kEAJO,EAKP,4DALO,EAMP,+EANO,EAOP,qEAPO,EAQP,6DARO,EASP,wDAAYF,OAAZ,CAAoB;AAClBS,gBAAI,EAAE,qEADY;AAElBC,sBAAU,EAAE;AAFM,WAApB,CATO,EAaP,6DAAcV,OAAd,CAAsB,CAAC,qEAAD,EAAc,sFAAd,CAAtB,CAbO,EAcP,0EAAoBW,UAApB,CAA+B;AAC7BC,gBAAI,EAAE;AADuB,WAA/B,CAdO,EAiBP,sEAjBO,CAFD;AAqBRE,mBAAS,EAAE,EArBH;AAsBRC,mBAAS,EAAE,CAAC,2DAAD;AAtBH,S;AAwBY,Q;;;;;;;;;;;;;;;;;;AC7CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMvB,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,QAAR;AAAkBuB,eAAS,EAAE,2EAA7B;AAA6CC,iBAAW,EAAE,CAAC,yFAAD;AAA1D,KADqB,EAErB;AAAExB,UAAI,EAAE,QAAR;AAAkBuB,eAAS,EAAE,gFAA7B;AAA8CC,iBAAW,EAAE,CAAC,yFAAD;AAA3D,KAFqB,CAAvB;;QASaC,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBAHb,CAAC,6DAAaC,QAAb,CAAsB3B,MAAtB,CAAD,CAGa,EAFZ,4DAEY;;;;0HAAX0B,W,EAAW;AAAA;AAAA,kBAFZ,4DAEY;AAAA,O;AAFA,K;;;;;sEAEXA,W,EAAW;cAJvB,sDAIuB;eAJd;AACRhB,iBAAO,EAAE,CAAC,6DAAaiB,QAAb,CAAsB3B,MAAtB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIc,Q;;;;;;;;;;;;;;;;;;ACfxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaO,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAFZ,CAAC,4DAAD,EAAe,gEAAf,EAA4B,kEAA5B,EAAiD,kEAAjD,CAEY;;;;0HAAVA,U,EAAU;AAAA,uBAHN,2EAGM,EAHU,gFAGV;AAHyB,kBACpC,4DADoC,EACtB,gEADsB,EACT,kEADS,EACY,kEADZ;AAGzB,O;AAFgD,K;;;;;sEAE1DA,U,EAAU;cAJtB,sDAIsB;eAJb;AACRgB,sBAAY,EAAE,CAAC,2EAAD,EAAiB,gFAAjB,CADN;AAERX,iBAAO,EAAE,CAAC,4DAAD,EAAe,gEAAf,EAA4B,kEAA5B,EAAiD,kEAAjD;AAFD,S;AAIa,Q;;;;;;;;;;;;;;;;;;ACZvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcQ;;AAIE;;AACF;;;;;;AAME;;AAIE;;AACF;;;;;;AAIJ;;AAIE;;AACF;;;;QDbOkB,c;AAuBX,8BACUC,MADV,EAEUC,KAFV,EAGUC,KAHV,EAIUC,QAJV,EAI2B;AAAA;;AAAA;;AAHjB,aAAAH,MAAA,GAAAA,MAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AA1BV,aAAAC,SAAA,GAAY,IAAI,wDAAJ,CAAc;AACxBC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAApB,CADiB;AAExBE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWD,QADiB,EAE5B,0DAAWE,SAAX,CAAqB,CAArB,CAF4B,CAApB;AAFc,SAAd,CAAZ;AAQA,aAAAC,WAAA,GAAc,KAAd;AAEA,aAAAC,UAAA,GAAa,IAAI,4CAAJ,EAAb;AAkBE,aAAKT,KAAL,CAAWU,aAAX,CAAyBC,SAAzB,CAAmC,UAACC,QAAD,EAAc;AAC/C,eAAI,CAACC,MAAL,GAAcD,QAAQ,CAACE,GAAT,CAAa,KAAb,CAAd;AACD,SAFD;AAGD;;;;mCAEU;AAAA;;AACT,eAAKZ,QAAL,CACGa,IADH,CACQ,6DAAO,6EAAaC,IAApB,CADR,EACmC,iEAAU,KAAKP,UAAf,CADnC,EAEGE,SAFH,CAEa,YAAM;AACf,kBAAI,CAACZ,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,MAAI,CAACJ,MAAL,IAAe,GAAhB,CAArB;AACD,WAJH;AAMA,eAAKX,QAAL,CACGa,IADH,CACQ,6DAAO,4EAAYC,IAAnB,CADR,EACkC,iEAAU,KAAKP,UAAf,CADlC,EAEGE,SAFH,CAEa,YAAM;AACf,kBAAI,CAACH,WAAL,GAAmB,IAAnB;AACD,WAJH;AAKD;;;iCAEQ;AACP,cAAI,KAAKL,SAAL,CAAee,KAAnB,EAA0B;AACxB,iBAAKjB,KAAL,CAAWkB,QAAX,CACE,8EAAM;AACJC,qBAAO,EAAE;AACPhB,qBAAK,EAAE,KAAKA,KAAL,CAAWiB,KADX;AAEPf,wBAAQ,EAAE,KAAKA,QAAL,CAAce;AAFjB;AADL,aAAN,CADF;AAQD,WATD,MASO;AACL,4GAAa,KAAKlB,SAAlB;AACD;AACF;;;sCAEa;AACZ,eAAKM,UAAL,CAAgBa,IAAhB,CAAqB,IAArB;AACA,eAAKb,UAAL,CAAgBc,QAAhB;AACD;;;4BAnDQ;AACP,iBAAO,KAAKpB,SAAL,CAAeW,GAAf,CAAmB,OAAnB,CAAP;AACD;;;4BAEW;AACV,iBAAO,KAAKX,SAAL,CAAeW,GAAf,CAAmB,UAAnB,CAAP;AACD;;;;;;;uBArBUhB,c,EAAc,uH,EAAA,+H,EAAA,kH,EAAA,sH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,qnB;AAAA;AAAA;AC1B3B;;AACE;;AACE;;AAA6B;;AAAU;;AACvC;;AAGE;AAAA,mBAAY,IAAA0B,MAAA,EAAZ;AAAoB,WAApB;;AAEA;;AAAkC;;AAAO;;AACzC;;AACE;;AACE;;AACA;;AACF;;AACA;;AAMF;;AACA;;AACE;;AACE;;AACA;;AACA;;AAMF;;AACF;;AACA;;AAAyC;;AAAO;;AAChD;;AAMF;;AACA;;AACE;;AACA;;AAAyD;;AAAO;;AAClE;;AACF;;AACF;;;;AAzCM;;AAAA;;AAWI;;AAAA;;AAWE;;AAAA;;AASJ;;AAAA;;;;;;;;;sEDVK1B,c,EAAc;cAL1B,uDAK0B;eALhB;AACTf,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1B3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcQ;;AAIE;;AACF;;;;;;AAME;;AAIE;;AACF;;;;;;AAOA;;AAOE;;AACF;;;;;;AACA;;AAOE;;AACF;;;;;;AAIJ;;AAIE;;AACF;;;;QDxCOwC,e;AAoCX,+BACU1B,MADV,EAEUE,KAFV,EAGUC,QAHV,EAIUwB,WAJV,EAIkC;AAAA;;AAHxB,aAAA3B,MAAA,GAAAA,MAAA;AACA,aAAAE,KAAA,GAAAA,KAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACA,aAAAwB,WAAA,GAAAA,WAAA;AAvCV,aAAAC,UAAA,GAAa,IAAI,wDAAJ,CACX;AACEvB,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAApB,CADT;AAEEE,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAC5B,0DAAWD,QADiB,EAE5B,0DAAWE,SAAX,CAAqB,CAArB,CAF4B,CAApB,CAFZ;AAMEqB,yBAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CACnC,0DAAWvB,QADwB,EAEnC,0DAAWE,SAAX,CAAqB,CAArB,CAFmC,CAApB;AANnB,SADW,EAYX;AACEsB,oBAAU,EAAE;AADd,SAZW,CAAb;AAmBA,aAAAC,YAAA,GAAe,KAAf;AAEA,aAAArB,UAAA,GAAa,IAAI,4CAAJ,EAAb;AAmBI;;;;mCAEO;AAAA;;AACT,eAAKP,QAAL,CACGa,IADH,CACQ,6DAAO,6EAAP,CADR,EAC+B,iEAAU,KAAKN,UAAf,CAD/B,EAEGE,SAFH,CAEa,YAAM;AACf,kBAAI,CAACZ,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,WAJH;AAMA,eAAKf,QAAL,CACGa,IADH,CACQ,6DAAO,6EAAaC,IAApB,CADR,EACmC,iEAAU,KAAKP,UAAf,CADnC,EAEGE,SAFH,CAEa,YAAM;AACf,kBAAI,CAACmB,YAAL,GAAoB,IAApB;AACD,WAJH;AAKD;;;iCAEQ;AACP,cAAI,KAAKH,UAAL,CAAgBT,KAApB,EAA2B;AACzB,iBAAKjB,KAAL,CAAWkB,QAAX,CACE,+EAAO;AACLC,qBAAO,EAAE;AACPhB,qBAAK,EAAE,KAAKA,KAAL,CAAWiB,KADX;AAEPf,wBAAQ,EAAE,KAAKA,QAAL,CAAce;AAFjB;AADJ,aAAP,CADF;AAQD,WATD,MASO;AACL,4GAAa,KAAKM,UAAlB;AACD;AACF;;;sCAEa;AACZ,eAAKlB,UAAL,CAAgBa,IAAhB,CAAqB,IAArB;AACA,eAAKb,UAAL,CAAgBc,QAAhB;AACD;;;4BAnDW;AACV,iBAAO,KAAKI,UAAL,CAAgBb,GAAhB,CAAoB,OAApB,CAAP;AACD;;;4BAEc;AACb,iBAAO,KAAKa,UAAL,CAAgBb,GAAhB,CAAoB,UAApB,CAAP;AACD;;;4BAEqB;AACpB,iBAAO,KAAKa,UAAL,CAAgBb,GAAhB,CAAoB,iBAApB,CAAP;AACD;;;;;;;uBAlCUW,e,EAAe,uH,EAAA,kH,EAAA,sH,EAAA,gJ;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,krB;AAAA;AAAA;ACvB5B;;AACE;;AACE;;AAA6B;;AAAU;;AACvC;;AAGE;AAAA,mBAAY,IAAAD,MAAA,EAAZ;AAAoB,WAApB;;AAEA;;AAAkC;;AAAO;;AACzC;;AACE;;AACE;;AACA;;AACF;;AACA;;AAMF;;AACA;;AACE;;AACE;;AACA;;AACA;;AAMF;;AACF;;AACA;;AACE;;AACE;;AACA;;AACA;;AASA;;AASF;;AACF;;AACA;;AAAyC;;AAAO;;AAChD;;AAMF;;AACA;;AACE;;AACA;;AAAyD;;AAAO;;AAClE;;AACF;;AACF;;;;AAjEM;;AAAA;;AAWI;;AAAA;;AAWE;;AAAA;;AAYA;;AAAA;;AASA;;AAAA;;AAYJ;;AAAA;;;;;;;;;sEDrCKC,e,EAAe;cAL3B,uDAK2B;eALjB;AACT1C,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErB5B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAM8C,wBAAwB,GAAgB,SAAxCA,wBAAwC,CACnDC,OADmD,EAEvB;AAC5B,UAAM1B,QAAQ,GAAG0B,OAAO,CAAClB,GAAR,CAAY,UAAZ,CAAjB;AACA,UAAMc,eAAe,GAAGI,OAAO,CAAClB,GAAR,CAAY,iBAAZ,CAAxB;AAEA,aAAOR,QAAQ,IAAIsB,eAAZ,IAA+BtB,QAAQ,CAACe,KAAT,KAAmBO,eAAe,CAACP,KAAlE,GACH;AAAEY,wBAAgB,EAAE;AAApB,OADG,GAEH,IAFJ;AAGD,KATM;;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAA0B;AACpDC,YAAM,CAACtE,IAAP,CAAYqE,SAAS,CAACE,QAAtB,EAAgCC,OAAhC,CAAwC,UAACC,KAAD,EAAW;AACjD,YAAMP,OAAO,GAAGG,SAAS,CAACrB,GAAV,CAAcyB,KAAd,CAAhB;;AACA,YAAIP,OAAO,YAAY,0DAAvB,EAAoC;AAClCA,iBAAO,CAACQ,aAAR,CAAsB;AAAEC,oBAAQ,EAAE;AAAZ,WAAtB;AACD,SAFD,MAEO,IAAIT,OAAO,YAAY,wDAAvB,EAAkC;AACvC,mBAAI,CAACU,qBAAL,CAA2BV,OAA3B;AACD;AACF,OAPD;AAQD,KATM;;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAMW,KAAK,GAAG,yDAAU,6BAAxB;AACA,QAAMC,MAAM,GAAG,yDAAU,iBAAzB;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,W;AACX,2BAAoB5C,KAApB,EAAoDF,MAApD,EAAoE;AAAA;;AAAhD,aAAAE,KAAA,GAAAA,KAAA;AAAgC,aAAAF,MAAA,GAAAA,MAAA;AAAkB;;;;sCAE3D;AAAA;;AACT,cAAM+C,SAAS,GAAG,KAAK7C,KAAL,CAAWc,IAAX,CAChB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAN,CAAW6D,QAAtB;AAAA,WAAP,CADgB,EAEhB,4DAAK,CAAL,CAFgB,CAAlB;AAIAF,mBAAS,CAACnC,SAAV,CAAoB,UAACqC,QAAD,EAAc;AAChC,gBAAI,CAACA,QAAL,EAAe;AACb,oBAAI,CAACjD,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;AACF,WAJD;AAKA,iBAAO6B,SAAP;AACD;;;;;;;uBAdUD,W,EAAW,yG,EAAA,8G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVI,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,c;AACX,8BAAoBjD,KAApB,EAA6C;AAAA;;AAAzB,aAAAA,KAAA,GAAAA,KAAA;AAA2B;;;;sCAEpC;AACT,iBAAO,KAAKA,KAAL,CAAWc,IAAX,CACL,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAN,CAAW6D,QAAtB;AAAA,WAAP,CADK,EAEL,2DAAI,UAACG,IAAD;AAAA,mBAAU,CAACA,IAAX;AAAA,WAAJ,CAFK,CAAP;AAID;;;;;;;uBARUD,c,EAAc,yG;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVD,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaG,W;AAMX,2BAAoBC,OAApB,EAA6C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AALpB,aAAAC,UAAA,GAA0C,IAAI,oDAAJ,CAAoB;AAC5DlD,eAAK,EAAE,EADqD;AAE5DmD,gBAAM,EAAE;AAFoD,SAApB,CAA1C;AAK+C;;;;8BAEzCnD,K,EAAeE,Q,EAAgB;AAAA;;AACnC,cAAMkD,QAAQ,GAAG,KAAKH,OAAL,CACdI,IADc,CAQb,gDARa,EASb;AACErD,iBAAK,EAALA,KADF;AAEEE,oBAAQ,EAARA;AAFF,WATa,EAab;AACEoD,eAAG,EAAE;AADP,WAba,EAiBd3C,IAjBc,CAiBT,8DAjBS,CAAjB;AAmBAyC,kBAAQ,CAACzC,IAAT,CAAc,4DAAK,CAAL,CAAd,EAAuBJ,SAAvB,CAAiC,YAAM;AACrC,kBAAI,CAAC2C,UAAL,CAAgBhC,IAAhB,CAAqB;AACnBiC,oBAAM,EAAE,IADW;AAEnBnD,mBAAK,EAALA;AAFmB,aAArB;AAID,WALD;AAOA,iBAAOoD,QAAP;AACD;;;iCAEK;AACJ,eAAKF,UAAL,CAAgBhC,IAAhB,CAAqB;AACnBiC,kBAAM,EAAE,KADW;AAEnBnD,iBAAK,EAAE;AAFY,WAArB;AAID;;;+BAEMA,K,EAAeE,Q,EAAkB;AAAA;;AACtC,cAAMkD,QAAQ,GAAG,KAAKH,OAAL,CACdI,IADc,CAQb,iDARa,EASb;AACErD,iBAAK,EAALA,KADF;AAEEE,oBAAQ,EAARA;AAFF,WATa,EAab;AACEoD,eAAG,EAAE;AADP,WAba,EAiBd3C,IAjBc,CAiBT,8DAjBS,CAAjB;AAmBAyC,kBAAQ,CAACzC,IAAT,CAAc,4DAAK,CAAL,CAAd,EAAuBJ,SAAvB,CAAiC,YAAM;AACrC,kBAAI,CAAC2C,UAAL,CAAgBhC,IAAhB,CAAqB;AACnBiC,oBAAM,EAAE,IADW;AAEnBnD,mBAAK,EAALA;AAFmB,aAArB;AAID,WALD;AAOA,iBAAOoD,QAAP;AACD;;;;;;;uBAzEUJ,W,EAAW,kJ;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVH,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;AChBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMU,MAAM,GAAG,8BAAf;AACA,QAAMC,MAAM,GAAG,kCAAf;AAEA,QAAMC,OAAO,GAAG,4CAAhB;AACA,QAAMC,OAAO,GAAG,yCAAhB;AAEA,QAAMC,OAAO,GAAG,yCAAhB;AACA,QAAMC,OAAO,GAAGF,OAAhB;;;;;;;;;;;;;;;;ACPP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAM5F,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,KADR;AAEEuB,eAAS,EAAE,0FAFb;AAGEC,iBAAW,EAAE,CAAC,mFAAD;AAHf,KADqB,CAAvB;;QAYasE,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHnB,CAAC,6DAAapE,QAAb,CAAsB3B,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;0HAAjB+F,iB,EAAiB;AAAA;AAAA,kBAFlB,4DAEkB;AAAA,O;AAFN,K;;;;;sEAEXA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACRrF,iBAAO,EAAE,CAAC,6DAAaiB,QAAb,CAAsB3B,MAAtB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIoB,Q;;;;;;;;;;;;;;;;;;ACjB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaQ,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBARlB,CACP,4DADO,EAEP,kEAFO,EAGP,kEAHO,EAIP,4EAJO,EAKP,2FALO,CAQkB;;;;0HAAhBA,gB,EAAgB;AAAA,uBATZ,0FASY;AATO,kBAEhC,4DAFgC,EAGhC,kEAHgC,EAIhC,kEAJgC,EAKhC,4EALgC,EAMhC,2FANgC;AASP,O;AAHV,K;;;;;sEAGNA,gB,EAAgB;cAV5B,sDAU4B;eAVnB;AACRe,sBAAY,EAAE,CAAC,0FAAD,CADN;AAERX,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,kEAHO,EAIP,4EAJO,EAKP,2FALO;AAFD,S;AAUmB,Q;;;;;;;;;;;;;;;;;;AClB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIM;;AACE;;AACF;;;;;;AADkB;;AAAA;;;;;;AAElB;;AAAgD;;AAAa;;;;;;AAJ/D;;AACE;;AAGA;;AACF;;;;;;AAJmB;;AAAA;;AAGd;;AAAA;;;;QDMIsF,mB;AAKX,mCAAoBjE,KAApB,EAA6C;AAAA;;AAAzB,aAAAA,KAAA,GAAAA,KAAA;AAJpB,aAAAQ,UAAA,GAAa,IAAI,4CAAJ,EAAb;AAI+C;;;;mCAEpC;AACT,eAAK0D,WAAL,GAAmB,KAAKlE,KAAL,CAAWc,IAAX,CACjB,2DAAO,UAACgC,KAAD;AAAA,mBACLA,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,GACIgD,MAAM,CAACgC,MAAP,CAAcrB,KAAK,CAAC3D,UAAN,CAAiBA,UAA/B,CADJ,GAEI,EAHC;AAAA,WAAP,CADiB,CAAnB;AAOA,eAAKa,KAAL,CAAWkB,QAAX,CAAoB,mGAApB;AACD;;;sCAEa;AACZ,eAAKV,UAAL,CAAgBa,IAAhB,CAAqB,KAArB;AACA,eAAKb,UAAL,CAAgBc,QAAhB;AACD;;;;;;;uBArBU2C,mB,EAAmB,kH;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,c;AAAA,a;AAAA,0Q;AAAA;AAAA;ACbhC;;AACE;;AACE;;AAA8B;;AAAU;;AACxC;;;;AAMF;;AACF;;;;AAPS;;AAAA;;;;;;;;;;sEDUIA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnF,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AEbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAMG,UAAU,GAAG,SAAbA,UAAa,CAACiF,OAAD;AAAA,uBACrB,sDADqB,wBACAA,OADA;AAAA,KAAnB;;AAGA,QAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,OAAD,EAAkBE,OAAlB;AAAA,uBACvB,sDADuB,wBACFF,OADE,cACSE,OADT;AAAA,KAArB;;;;;;;;;;;;;;;;;ACLP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,gB;AACX,gCAAoBnB,OAApB,EAA6C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AAA2B;;;;+BAG7CgB,O,EAAe;AAIf,iBAAO,KAAKhB,OAAL,CAAavC,GAAb,CAEG,8DAAWuD,OAAX,CAFH,EAEwB;AAC7BX,eAAG,EAAE;AADwB,WAFxB,CAAP;AAKD;;;6CAEoBW,O,EAAiBI,K,EAAY;AAChD,iBAAO,KAAKpB,OAAL,CAAaqB,GAAb,CAAiB,gEAAaL,OAAb,EAAsBI,KAAK,CAACxG,EAA5B,CAAjB,EAAkDwG,KAAlD,EAAyD;AAC9Df,eAAG,EAAE;AADyD,WAAzD,CAAP;AAGD;;;kDAGCW,O,EACAE,O,EAAe;AAEf,iBAAO,KAAKlB,OAAL,WAAoB,gEAAagB,OAAb,EAAsBE,OAAtB,CAApB,EAAoD;AACzDb,eAAG,EAAE;AADoD,WAApD,CAAP;AAGD;;;mDAGCW,O,EACAE,O,EACAI,Y,EAAoB;AAEpB,iBAAO,KAAKtB,OAAL,CAAauB,KAAb,CACL,gEAAaP,OAAb,EAAsBE,OAAtB,CADK,EAEL;AACEI,wBAAY,EAAZA;AADF,WAFK,EAKL;AACEjB,eAAG,EAAE;AADP,WALK,CAAP;AASD;;;;;;;uBA5CUc,gB,EAAgB,kJ;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVvB,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAM4B,MAAM,GAAG,wDAAS,mBAAxB;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,Y;AAGX,4BAAoBzB,OAApB,EAA6C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AAA2B;;;;oCAEnC;AACV,cAAI,CAAC,KAAK0B,OAAV,EAAmB;AACjB,iBAAKA,OAAL,GAAe,KAAK1B,OAAL,CACZvC,GADY,CAGV,iDAHU,EAGF;AACTkE,qBAAO,EAAE;AADA,aAHE,EAMZjE,IANY,CAOX,2DAAI,UAACoC,IAAD;AAAA,qBAAUA,IAAI,CAAC0B,MAAf;AAAA,aAAJ,CAPW,EAQX,mEAAY,CAAZ,CARW,CAAf;AAUD;;AAED,iBAAO,KAAKE,OAAZ;AACD;;;qCAEY9G,E,EAAY;AACvB,iBAAO,KAAKgH,SAAL,GAAiBlE,IAAjB,CACL,+DAAQ,UAACmE,KAAD;AAAA,mBAAWA,KAAX;AAAA,WAAR,CADK,EAEL,8DAAO,UAACA,KAAD;AAAA,mBAAWA,KAAK,CAACjH,EAAN,KAAaA,EAAxB;AAAA,WAAP,CAFK,EAGL,4DAAK,CAAL,CAHK,CAAP;AAKD;;;uCAEckH,G,EAAe;AAC5B,iBAAO,KAAKF,SAAL,GAAiBlE,IAAjB,CACL,+DAAQ,UAACmE,KAAD;AAAA,mBAAWA,KAAX;AAAA,WAAR,CADK,EAEL,8DAAO,UAACA,KAAD;AAAA,mBAAWC,GAAG,CAACC,QAAJ,CAAaF,KAAK,CAACjH,EAAnB,CAAX;AAAA,WAAP,CAFK,EAGL,gEAHK,CAAP;AAKD;;;;;;;uBApCU6G,Y,EAAY,kJ;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACV7B,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;AClBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;;;;;AAEE,yGAAgC,YAAhC,EAAgC,WAAhC,EAAgC,aAAhC,EAAgC,KAAhC;;;;;;AAOI;;;;AAEE;;;;;;AAGA;;;;AAAK;;;;;;AAPX;;AACE;;AACE;;AAIA;;AAGF;;AACF;;;;;;;;AAPM;;AAAA,yGAA4C,UAA5C,EAA4C,GAA5C;;;;QDFGoC,6B,GALb;AAAA;;AAOW,WAAAC,IAAA,GAAmB,MAAnB;AAEV,K;;;uBAJYD,6B;AAA6B,K;;;YAA7BA,6B;AAA6B,kD;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,8T;AAAA;AAAA;ACT1C;;AACE;;AAMA;;AAaF;;;;;;AApBkC;;AAE9B;;AAAA,wGAA6C,UAA7C,EAA6C,GAA7C;;;;;;;;;sEDOSA,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACTtG,kBAAQ,EAAE,6BADD;AAETC,qBAAW,EAAE,0CAFJ;AAGTC,mBAAS,EAAE,CAAC,0CAAD;AAHF,S;AAK+B,Q;;gBACvC;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACE;;AAGA;;AAA2B;;AAAqB;;AAChD;;AAAkB;;AAA0B;;AAC9C;;;;;;AAJI;;AAAA;;AAEyB;;AAAA;;AACT;;AAAA;;;;QDIXsG,kB;AAOX,kCAAoBC,YAApB,EAAgD;AAAA;;AAA5B,aAAAA,YAAA,GAAAA,YAAA;AAFX,aAAAC,gBAAA,GAAmB,EAAnB;AAEyC;;;;mCAE1C;AACN,eAAKC,SAAL,GAAiB,KAAKF,YAAL,CAAkBG,OAAlB,CAA0B,KAAKpB,OAA/B,CAAjB;AACA,eAAKqB,KAAL,GAAa,KAAKF,SAAL,CAAe3E,IAAf,CACX,+DAAQ,UAAC8E,MAAD;AAAA,mBAAYA,MAAZ;AAAA,WAAR,CADW,EAEX,4DAAK,KAAKJ,gBAAV,CAFW,EAGX,gEAHW,CAAb;AAKD;;;;;;;uBAhBUF,kB,EAAkB,kJ;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,2P;AAAA;AAAA;ACX/B;;AACE;;AACE;;;;AAOF;;AACA;;AACE;;AACF;;AACF;;;;AAXS;;AAAA;;;;;;;;;;sEDSIA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTxG,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;gBAI5B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa6G,oB,GALb;AAAA;;AAOW,WAAAC,IAAA,GAAe,cAAf;AACA,WAAAC,IAAA,GAAe,KAAf;AACV,K;;;uBAJYF,oB;AAAoB,K;;;YAApBA,oB;AAAoB,wC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4H;AAAA;AAAA;ACRjC;;AACE;;AAKA;;AACE;;AACA;;AAAuB;;AAAU;;AACnC;;AACF;;;;AARI;;AAAA,0GAAkC,aAAlC,EAAkC,KAAlC;;AAKiB;;AAAA;;AACd;;AAAA;;AAAoB;;AAAA;;;;;;;;;sEDAdA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT/G,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKsB,Q;;gBAC9B;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACE;;;;AACF;;;;;;AADE;;AAAA;;;;;;;;;;;;;;AAoBF;;AACE;;AASA;;AACF;;;;;;AATI;;AAAA,8GAAqC,QAArC,EAAqC,qEAArC;;;;;;;;AAWF;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAA6B;;AAAQ;;AACrC;;AACF;;;;;;;;AAEE;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AAA6B;;AAAe;;AAC5C;;AACF;;;;QD9BKgH,kB;AAMX,kCAAoBlG,MAApB,EAA4CE,KAA5C,EAAqE;AAAA;;AAAjD,aAAAF,MAAA,GAAAA,MAAA;AAAwB,aAAAE,KAAA,GAAAA,KAAA;AAA2B;;;;mCAE5D;AAAA;;AACT,eAAK6C,SAAL,GAAiB,KAAK7C,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAN,CAAW6D,QAAtB;AAAA,WAAP,CAAhB,CAAjB;AACA,eAAKkD,UAAL,GAAkB,KAAKjG,KAAL,CAAWc,IAAX,CAChB,2DACE,UAACgC,KAAD;AAAA,mBACEA,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,IACA2D,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,CAA4B,MAAI,CAAC+G,aAAL,CAAmBlI,EAA/C,MAAuDmI,SAFzD;AAAA,WADF,CADgB,CAAlB;AAOD;;;oCAEW;AAAA;;AACV,eAAKtD,SAAL,CAAe/B,IAAf,CAAoB,4DAAK,CAAL,CAApB,EAA6BJ,SAA7B,CAAuC,UAACqC,QAAD,EAAc;AACnD,gBAAIA,QAAJ,EAAc;AACZ,oBAAI,CAAC/C,KAAL,CAAWkB,QAAX,CACE,yGAAqB;AACnBC,uBAAO,EAAE;AACPqD,uBAAK,EAAE,MAAI,CAAC4B;AADL;AADU,eAArB,CADF;AAOD,aARD,MAQO;AACL,oBAAI,CAACtG,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,cAAD,CAArB,EAAuC;AACrCqF,2BAAW,EAAE;AACXC,qBAAG,EAAE,MAAI,CAACxG,MAAL,CAAYyG;AADN;AADwB,eAAvC;AAKD;AACF,WAhBD;AAiBD;;;sCAEa;AACZ,eAAKvG,KAAL,CAAWkB,QAAX,CACE,8GAA0B;AACxBC,mBAAO,EAAE;AACPmD,qBAAO,EAAE,KAAK4B,aAAL,CAAmBlI;AADrB;AADe,WAA1B,CADF;AAOD;;;4BAEyB;AACxB,iBAAO,MAAP,OAAO,CAAP,kBACK,KAAKkI,aADV,CAAO,EACgB;AACrBM,qBAAS,EAAE,KAAKN,aAAL,CAAmBtB,MAAnB,CAA0B6B,GAA1B,CAA8B,UAACxB,KAAD;AAAA,qBAAWA,KAAK,CAACjH,EAAjB;AAAA,aAA9B,CADU;AAErB0G,wBAAY,EAAE;AAFO,WADhB,CAAP;AAKD;;;;;;;uBAvDUsB,kB,EAAkB,uH,EAAA,kH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,8nB;AAAA;AAAA;ACnB/B;;AACE;;AACA;;AACE;;AAGA;;AACE;;AAAM;;;;AAAmC;;AAC3C;;AACF;;AACA;;AACE;;AAAG;;AAA2B;;AAChC;;AACA;;AACE;;AAA+C;;AAAQ;;AACvD;;AACE;;AAIF;;AACA;;AAAyC;;AAA4B;;AACvE;;AACA;;AACE;;AAYA;;AACE;;;;AAQA;;AAMF;;AACF;;AACF;;;;;;AApDmB;;AAAA;;AAEV;;AAAA;;AAIG;;AAAA;;AAIL;;AAAA;;AAMC;;AAAA,0GAAkC,QAAlC,EAAkC,GAAlC;;AAIqC;;AAAA;;AAGV;;AAAA;;AAc3B;;AAAA,8JAAkD,UAAlD,EAAkD,GAAlD;;;;;;;;;;sEDnBKA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTlH,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;gBAC5B;;;;;;;;;;;;;;;;;;;;AEpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca0H,0B;AAWX,0CAAoB1G,KAApB,EAA6C;AAAA;;AAAzB,aAAAA,KAAA,GAAAA,KAAA;AARpB,aAAA2G,gBAAA,GAAmB,IAAI,wDAAJ,CAAc;AAC/BC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADyB,SAAd,CAAnB;AAQ+C;;;;mCAEpC;AAAA;;AACT,eAAK5G,KAAL,CACGc,IADH,CAEI,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,CAA4B,MAAI,CAAC+G,aAAL,CAAmBlI,EAA/C,CAAX;AAAA,WAAP,CAFJ,EAGI,4DAAK,CAAL,CAHJ,EAKG0C,SALH,CAKa,UAAC8D,KAAD,EAAW;AACpB,kBAAI,CAACoC,IAAL,CAAUC,QAAV,CAAmBrC,KAAK,CAACE,YAAzB;AACD,WAPH;AAQD;;;iCAEQ;AACP,eAAK1E,KAAL,CAAWkB,QAAX,CACE,+GAA2B;AACzBC,mBAAO,EAAE;AACPmD,qBAAO,EAAE,KAAK4B,aAAL,CAAmBlI,EADrB;AAEP0G,0BAAY,EAAE,KAAKkC,IAAL,CAAUxF;AAFjB;AADgB,WAA3B,CADF;AAQD;;;4BA1BO;AACN,iBAAO,KAAKuF,gBAAL,CAAsB9F,GAAtB,CAA0B,MAA1B,CAAP;AACD;;;;;;;uBATU6F,0B,EAA0B,kH;AAAA,K;;;YAA1BA,0B;AAA0B,8C;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,2O;AAAA;AAAA;ACdvC;;AACE;;AAAqC;AAAA,mBAAY,IAAAnF,MAAA,EAAZ;AAAoB,WAApB;;AACnC;;AACE;;AAKF;;AACA;;AAAyC;;AAAI;;AAC/C;;AACF;;;;AAVQ;;AAAA;;;;;;;;;sEDaKmF,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACT5H,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK4B,Q;;;;;;gBACpC;;;;;;;;;;;;;;;;;;;;AEfH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAIE;;AACF;;;;;;AADkB;;AAAA;;;;;;AAElB;;AAIE;;AACF;;;;QDFW8H,6B;AAKX,6CAAoBvB,YAApB,EAAgD;AAAA;;AAA5B,aAAAA,YAAA,GAAAA,YAAA;AAA8B;;;;mCAE1C;AACN,eAAKwB,gBAAL,GAAwB,KAAKxB,YAAL,CAAkByB,kBAAlB,CAAqC,KAAK1C,OAA1C,CAAxB;AACD;;;;;;;uBATUwC,6B,EAA6B,kJ;AAAA,K;;;YAA7BA,6B;AAA6B,gD;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,0R;AAAA;AAAA;ACV1C;;AACE;;;;AAMA;;;;AAMF;;;;;;;AAXI;;AAAA;;AAMA;;AAAA;;;;;;;;;;sEDESA,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACThI,kBAAQ,EAAE,2BADD;AAETC,qBAAW,EAAE,wCAFJ;AAGTC,mBAAS,EAAE,CAAC,wCAAD;AAHF,S;AAK+B,Q;;;;;;gBAGvC;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaiI,oB;AAMX,oCAAoBnH,MAApB,EAA4CC,KAA5C,EAAmE;AAAA;;AAAA;;AAA/C,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAJnC,aAAAmH,MAAA,GAAiB,GAAjB;AAKP,aAAKnH,KAAL,CAAWY,QAAX,CAAoBD,SAApB,CAA8B,UAACC,QAAD,EAAc;AAC1C,iBAAI,CAAC3C,EAAL,GAAUmJ,QAAQ,CAACxG,QAAQ,CAACE,GAAT,CAAa,IAAb,CAAD,CAAlB;AACD,SAFD;AAGD;;;;0CAEiB;AAChB,eAAKf,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,SAAD,EAAY,KAAKhD,EAAjB,EAAqB,SAArB,EAAgC,KAAKoJ,MAAL,CAAYpJ,EAA5C,CAArB,EAAsE;AACpEqI,uBAAW,EAAE;AACXC,iBAAG,EAAE,KAAKxG,MAAL,CAAYyG;AADN;AADuD,WAAtE;AAKD;;;;;;;uBAlBUU,oB,EAAoB,uH,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4G;AAAA;AAAA;ACTjC;;AACE;;AAAsC;;AAAmB;;AACzD;;AACE;;AAGE;AAAA,mBAAY,IAAAI,eAAA,EAAZ;AAA6B,WAA7B;;;;AACD;;AACH;;AACF;;;;AARwC;;AAAA;;AAGlC;;AAAA,mKAAqC,QAArC,EAAqC,UAArC;;;;;;;;;;sEDKOJ,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTnI,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;gBAC9B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AACE;;AACF;;;;;;AADoB;;AAAA;;;;;;AAGtB;;AAIG;;AAAgB;;;;;;AAEnB;;AAA6C;;AAAU;;;;;;AAZzD;;AACE;;AACE;;AAGF;;AACA;;;;AAMA;;AACF;;;;;;;;;;;AAXS;;AAAA;;AAKL;;AAAA;;AAKC;;AAAA;;;;QDDQsI,qB;AAOX,qCAAoB/B,YAApB,EAAgD;AAAA;;AAA5B,aAAAA,YAAA,GAAAA,YAAA;AAFX,aAAAgC,gBAAA,GAAmB,CAAnB;AAEyC;;;;mCAE1C;AACN,eAAKC,WAAL,GAAmB,KAAKjC,YAAL,CAAkBkC,UAAlB,CAA6B,KAAKnD,OAAlC,CAAnB;AACA,eAAKoD,QAAL,GAAgB,KAAKF,WAAL,CAAiB1G,IAAjB,CACd,+DAAQ,UAACsG,MAAD;AAAA,mBAAYA,MAAZ;AAAA,WAAR,CADc,EAEd,4DAAK,KAAKG,gBAAV,CAFc,EAGd,gEAHc,CAAhB;AAKD;;;;;;;uBAhBUD,qB,EAAqB,kJ;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,6W;AAAA;AAAA;ACXlC;;;;;;AAA0B;;;;;;;;;;sEDWbA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTxI,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;gBAI/B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa2I,mB;;;;;uBAAAA,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,uE;AAAA;AAAA;ACThC;;AACE;;AAAmB;;AAAyB;;AAC5C;;AACG;;;;AAAiD;;AAEtD;;;;AAJqB;;AAAA;;AAEhB;;AAAA;;;;;;;;;sEDMQA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT7I,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;gBAC7B;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMf,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYuB,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAEvB,UAAI,EAAE,KAAR;AAAeuB,eAAS,EAAE;AAA1B,KAFqB,EAGrB;AAAEvB,UAAI,EAAE,YAAR;AAAsBuB,eAAS,EAAE;AAAjC,KAHqB,EAIrB;AAAEvB,UAAI,EAAE,iBAAR;AAA2BuB,eAAS,EAAE;AAAtC,KAJqB,EAKrB;AAAEvB,UAAI,EAAE,oBAAR;AAA8BuB,eAAS,EAAE;AAAzC,KALqB,EAMrB;AAAEvB,UAAI,EAAE,8BAAR;AAAwCuB,eAAS,EAAE;AAAnD,KANqB,CAAvB;;QAaamI,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBAHrB,CAAC,6DAAahI,QAAb,CAAsB3B,MAAtB,CAAD,CAGqB,EAFpB,4DAEoB;;;;0HAAnB2J,mB,EAAmB;AAAA;AAAA,kBAFpB,4DAEoB;AAAA,O;AAFR,K;;;;;sEAEXA,mB,EAAmB;cAJ/B,sDAI+B;eAJtB;AACRjJ,iBAAO,EAAE,CAAC,6DAAaiB,QAAb,CAAsB3B,MAAtB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIsB,Q;;;;;;;;;;;;;;;;;;ACrBhaM,Y;;;;;YAAAA,Y;AAAY,kBAFX,wEAEW;;;;yBAAZA,Y;AAAY,O;AAAA,gBAdd,CACP,4DADO,EAEP,0EAFO,EAGP,kEAHO,EAIP,wFAJO,EAKP,6DALO,EAMP,8EANO,EAOP,yDAAYwJ,UAAZ,CAAuB,QAAvB,EAAiC,2EAAjC,CAPO,EAQP,6DAAcA,UAAd,CAAyB,CAAC,0EAAD,CAAzB,CARO,EASP,4FATO,EAUP,mEAVO,CAcc;;;;0HAAZxJ,Y,EAAY;AAAA,uBA7BrB,wEA6BqB,EA5BrB,kGA4BqB,EA3BrB,8FA2BqB,EA1BrB,uGA0BqB,EAzBrB,gIAyBqB,EAxBrB,+FAwBqB,EAvBrB,wGAuBqB,EAtBrB,oIAsBqB,EArBrB,kGAqBqB,EApBrB,8GAoBqB,EAnBrB,uGAmBqB,EAlBrB,qGAkBqB,EAjBrB,8GAiBqB,EAhBrB,yHAgBqB;AAhBK,kBAG1B,4DAH0B,EAI1B,0EAJ0B,EAK1B,kEAL0B,EAM1B,wFAN0B,EAO1B,6DAP0B,EAQ1B,8EAR0B,EAQf,+DARe,EAQf,mEARe,EAW1B,4FAX0B,EAY1B,mEAZ0B;AAgBL,O;AAJF,K;;;;;sEAIVA,Y,EAAY;cA/BxB,sDA+BwB;eA/Bf;AACRiB,sBAAY,EAAE,CACZ,wEADY,EAEZ,kGAFY,EAGZ,8FAHY,EAIZ,uGAJY,EAKZ,gIALY,EAMZ,+FANY,EAOZ,wGAPY,EAQZ,oIARY,EASZ,kGATY,EAUZ,8GAVY,EAWZ,uGAXY,EAYZ,qGAZY,EAaZ,8GAbY,EAcZ,yHAdY,CADN;AAiBRX,iBAAO,EAAE,CACP,4DADO,EAEP,0EAFO,EAGP,kEAHO,EAIP,wFAJO,EAKP,6DALO,EAMP,8EANO,EAOP,yDAAYkJ,UAAZ,CAAuB,QAAvB,EAAiC,2EAAjC,CAPO,EAQP,6DAAcA,UAAd,CAAyB,CAAC,0EAAD,CAAzB,CARO,EASP,4FATO,EAUP,mEAVO,CAjBD;AA6BRrI,mBAAS,EAAE,CAAC,wEAAD;AA7BH,S;AA+Be,Q;;;;;;;;;;;;;;;;;;AC3DzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIM;;AACE;;AACF;;;;;;AADkB;;AAAA;;;;QDSXsI,a;AAOX,6BACUvC,YADV,EAEUvF,KAFV,EAE+C;AAAA;;AADrC,aAAAuF,YAAA,GAAAA,YAAA;AACA,aAAAvF,KAAA,GAAAA,KAAA;AANV,aAAA+H,MAAA,GAAiB,CAAjB;AAOI;;;;mCAEO;AAAA;;AACT,eAAKC,OAAL,GAAe,KAAKhI,KAAL,CAAWc,IAAX,CACb,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAACmF,MAAN,CAAaC,aAAxB;AAAA,WAAP,CADa,CAAf;AAGA,eAAKlI,KAAL,CACGc,IADH,CAEI,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAACmF,MAAN,CAAaE,WAAxB;AAAA,WAAP,CAFJ,EAGI,0EAAK,CAAL,CAHJ,EAKGzH,SALH,CAKa,UAAC0H,IAAD,EAAU;AACnB,gBAAIA,IAAI,KAAK,CAAb,EAAgB;AACd,qBAAI,CAACC,QAAL;AACD;AACF,WATH;AAUD;;;mCAEU;AACT,eAAKrI,KAAL,CAAWkB,QAAX,CAAoB,sFAApB;AACD;;;;;;;uBA9BU4G,a,EAAa,kJ,EAAA,kH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,gL;AAAA;AAAA;ACd1B;;AACE;;AACE;;AAAkB;;AAAM;;AACxB;;AACE;;;;AAGF;;AACA;;AAAG;AAAA,mBAAS,IAAAO,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAS;;AACnC;;AACF;;;;AANuB;;AAAA;;;;;;;;;;sEDUVP,a,EAAa;cALzB,uDAKyB;eALf;AACThJ,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;;;;;AAEE;;;;;;AAGF;;AACE;;AACF;;;;;;AADoB;;AAAA,sFAAiB,QAAjB,EAAiB,GAAjB;;;;QDOTsJ,wB,GAKX,kCACUvI,KADV,EAEUwF,YAFV,EAEoC;AAAA;;AAAA;;AAD1B,WAAAxF,KAAA,GAAAA,KAAA;AACA,WAAAwF,YAAA,GAAAA,YAAA;AAER,WAAKxF,KAAL,CAAWY,QAAX,CAAoBD,SAApB,CAA8B,UAACC,QAAD,EAAc;AAC1C,eAAI,CAAC3C,EAAL,GAAUmJ,QAAQ,CAACxG,QAAQ,CAACE,GAAT,CAAa,IAAb,CAAD,CAAlB;AAEA,eAAI,CAAC6G,QAAL,GAAgB,OAAI,CAACnC,YAAL,CAAkBkC,UAAlB,CAA6B,OAAI,CAACzJ,EAAlC,CAAhB;AACA,eAAI,CAACuK,cAAL,GAAsB,OAAI,CAAChD,YAAL,CAAkBiD,eAAlB,CAAkC,OAAI,CAACxK,EAAvC,CAAtB;AACD,OALD;AAMD,K;;;uBAfUsK,wB,EAAwB,+H,EAAA,kJ;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,8O;AAAA;AAAA;ACdrC;;AACE;;;;AAIA;;AAAkB;;AAAO;;AACzB;;;;AAGF;;;;AAPI;;AAAA;;AAIG;;AAAA;;;;;;;;;;sEDQMA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTxJ,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEdrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;AC2CM;;AAIE;;AAQF;;;;;;AAPI;;AAAA,0GAAqC,QAArC,EAAqC,qEAArC;;;;;;AA2GN;;AAKE;;AAAkB;;AAAa;;AAC/B;;AAGF;;;;;;AAFI;;AAAA;;;;;;AAlKR;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAKF;;AACA;;AACE;;AAIF;;AACA;;AACE;;AAKF;;AACA;;AACE;;AAMF;;AACA;;AACE;;AAMF;;AACA;;AACA;;AAaF;;AACA;;AACE;;AACE;;AAOA;;AAOA;;AAOA;;AAOA;;AAOA;;AAOF;;AACA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AAAiC;;AAAU;;AAC3C;;AACF;;AAEA;;AACE;;AAAkB;;AAAO;;AACzB;;AACE;;AACE;;AAAkB;;AAAY;;AAC9B;;AACE;;;;AACF;;AACF;;AAEA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AACE;;AAAmC;;AAA4B;;AACjE;;AACF;;AACA;;AACE;;AAAkB;;AAAM;;AACxB;;AACE;;;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAiC;;AAAO;;AACxC;;AACF;;AAEA;;AACE;;AAAkB;;AAAe;;AACjC;;AAGF;;AAEA;;;;AAUF;;AACF;;;;;;;;AAlKmB;;AAAA;;AAIT;;AAAA;;AAOA;;AAAA;;AAMA;;AAAA;;AAOA;;AAAA;;AAQA;;AAAA;;AASF;;AAAA;;AAeE;;AAAA,uGAAkC,aAAlC,EAAkC,KAAlC;;AAOA;;AAAA,uGAAkC,aAAlC,EAAkC,KAAlC;;AAOA;;AAAA,uGAAkC,aAAlC,EAAkC,KAAlC;;AAOA;;AAAA,uGAAkC,aAAlC,EAAkC,KAAlC;;AAOA;;AAAA,uGAAkC,aAAlC,EAAkC,KAAlC;;AAOA;;AAAA,uGAAkC,aAAlC,EAAkC,KAAlC;;AAQc;;AAAA;;AAMJ;;AAAA;;AAME;;AAAA;;AASV;;AAAA;;AAOG;;AAAA;;AAAgC;;AAAA;;AAMnC;;AAAA;;AAQa;;AAAA;;AAMjB;;AAAA;;AAMF;;AAAA;;;;QD9IOyJ,qB;AAQX,qCACU1I,KADV,EAEUwF,YAFV,EAGUvF,KAHV,EAGiC;AAAA;;AAAA;;AAFvB,aAAAD,KAAA,GAAAA,KAAA;AACA,aAAAwF,YAAA,GAAAA,YAAA;AACA,aAAAvF,KAAA,GAAAA,KAAA;AALV,aAAAQ,UAAA,GAAa,IAAI,4CAAJ,EAAb;AAOE,aAAKT,KAAL,CAAWY,QAAX,CAAoBD,SAApB,CAA8B,UAACC,QAAD,EAAc;AAC1C,iBAAI,CAAC3C,EAAL,GAAUmJ,QAAQ,CAACxG,QAAQ,CAACE,GAAT,CAAa,IAAb,CAAD,CAAlB;AAEA,iBAAI,CAAC0H,cAAL,GAAsBhD,YAAY,CAACiD,eAAb,CAA6B,OAAI,CAACxK,EAAlC,CAAtB;;AAEA,iBAAI,CAACuK,cAAL,CACGzH,IADH,CACQ,iEAAU,OAAI,CAACN,UAAf,CADR,EAEGE,SAFH,CAEa,UAACwF,aAAD,EAAmB;AAC5B,mBAAI,CAACwC,WAAL,GAAmB,OAAI,CAAC1I,KAAL,CAAWc,IAAX,CACjB,2DACE,UAACgC,KAAD;AAAA,qBACEA,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,IACA2D,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,CAA4B+G,aAAa,CAAClI,EAA1C,MAAkDmI,SAFpD;AAAA,aADF,CADiB,CAAnB;AAOD,WAVH;AAWD,SAhBD;AAiBD;;;;sCAEa;AACZ,eAAK3F,UAAL,CAAgBa,IAAhB,CAAqB,IAArB;AACA,eAAKb,UAAL,CAAgBc,QAAhB;AACD;;;;;;;uBAnCUmH,qB,EAAqB,+H,EAAA,kJ,EAAA,kH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,2zD;AAAA;AAAA;ACflC;;;;;;AAAqB;;;;;;;;;;sEDeRA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT3J,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEflC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;;;;;AAEE;;;;;;AAIA;;AACE;;AACE;;AAKF;;AACA;;AACE;;AAAkB;;AAAqB;;AACvC;;AAAkB;;AAA0B;;AAC9C;;AACF;;;;;;AATM;;AAAA;;AAMgB;;AAAA;;AACA;;AAAA;;;;QDJb2J,sB,GAKX,gCACU5I,KADV,EAEUwF,YAFV,EAEoC;AAAA;;AAAA;;AAD1B,WAAAxF,KAAA,GAAAA,KAAA;AACA,WAAAwF,YAAA,GAAAA,YAAA;AAER,WAAKxF,KAAL,CAAWY,QAAX,CAAoBD,SAApB,CAA8B,UAACC,QAAD,EAAc;AAC1C,eAAI,CAAC3C,EAAL,GAAUmJ,QAAQ,CAACxG,QAAQ,CAACE,GAAT,CAAa,IAAb,CAAD,CAAlB;AAEA,eAAI,CAAC8E,KAAL,GAAa,OAAI,CAACJ,YAAL,CAAkBG,OAAlB,CAA0B,OAAI,CAAC1H,EAA/B,CAAb;AACA,eAAI,CAACuK,cAAL,GAAsB,OAAI,CAAChD,YAAL,CAAkBiD,eAAlB,CAAkC,OAAI,CAACxK,EAAvC,CAAtB;AACD,OALD;AAMD,K;;;uBAfU2K,sB,EAAsB,+H,EAAA,kJ;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,c;AAAA,a;AAAA,8W;AAAA;AAAA;ACbnC;;AACE;;;;AAIA;;AAAkB;;AAAI;;AACtB;;AACE;;;;AAaF;;AACF;;;;AAnBI;;AAAA;;AAKgC;;AAAA;;;;;;;;;;sEDMvBA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT7J,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEbnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;;;;;;;AAEE,oGAA+B,MAA/B,EAA+B,aAA/B,EAA+B,MAA/B,EAA+B,2BAA/B;;;;;;AAKA;;;;;;AAEE,sFAAiB,QAAjB,EAAiB,KAAjB;;;;QDIO4J,wB,GAUX,kCACU7I,KADV,EAEUwF,YAFV,EAEoC;AAAA;;AAAA;;AAD1B,WAAAxF,KAAA,GAAAA,KAAA;AACA,WAAAwF,YAAA,GAAAA,YAAA;AALV,WAAA3E,MAAA,GAAiB,KAAjB;AACA,WAAAiI,OAAA,GAAkB,MAAlB;AAME,WAAK9I,KAAL,CAAWU,aAAX,CAAyBC,SAAzB,CAAmC,UAACC,QAAD,EAAc;AAC/C,eAAI,CAACC,MAAL,GAAcD,QAAQ,CAACE,GAAT,CAAa,KAAb,CAAd;;AACA,YAAM3C,IAAI,GAAG,OAAI,CAAC0C,MAAL,CAAYkI,KAAZ,CAAkB,GAAlB,EAAuBC,GAAvB,EAAb;;AACA,YAAI7K,IAAI,KAAK,SAAb,EAAwB;AACtB,iBAAI,CAAC2K,OAAL,GAAe,SAAf;AACD;AACF,OAND;AAQA,WAAK9I,KAAL,CAAWY,QAAX,CAAoBD,SAApB,CAA8B,UAACC,QAAD,EAAc;AAC1C,eAAI,CAAC3C,EAAL,GAAUmJ,QAAQ,CAACxG,QAAQ,CAACE,GAAT,CAAa,IAAb,CAAD,CAAlB;AACA,eAAI,CAACmI,QAAL,GAAgBrI,QAAQ,CAACE,GAAT,CAAa,UAAb,CAAhB;AAEA,eAAI,CAAC0H,cAAL,GAAsB,OAAI,CAAChD,YAAL,CAAkBiD,eAAlB,CAAkC,OAAI,CAACxK,EAAvC,CAAtB;AACA,eAAI,CAACiL,OAAL,GAAe,OAAI,CAAC1D,YAAL,CAAkBkC,UAAlB,CAA6B,OAAI,CAACzJ,EAAlC,EAAsC8C,IAAtC,CACb,+DAAQ,UAACsG,MAAD;AAAA,iBAAYA,MAAZ;AAAA,SAAR,CADa,EAEb,8DAAO,UAACA,MAAD;AAAA,iBAAYA,MAAM,CAACpJ,EAAP,KAAc,OAAI,CAACgL,QAA/B;AAAA,SAAP,CAFa,EAGb,4DAAK,CAAL,CAHa,CAAf;AAKD,OAVD;AAWD,K;;;uBAjCUJ,wB,EAAwB,+H,EAAA,kJ;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,uO;AAAA;AAAA;ACdrC;;AACE;;;;AAMA;;AACE;;;;AAKF;;AACF;;;;AAZI;;AAAA;;AAOE;;AAAA;;;;;;;;;;sEDKOA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT9J,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEdrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAMkK,YAAY,GAAG,wDAAS,gBAA9B;;AACA,QAAMC,YAAY,GAAG,SAAfA,YAAe,CAAC7E,OAAD;AAAA,aAAqB,yEAAmBA,OAAnB,CAArB;AAAA,KAArB;;AACA,QAAM8E,SAAS,GAAG,SAAZA,SAAY,CAAC9E,OAAD;AAAA,aACvB,yEAAmBA,OAAnB,aADuB;AAAA,KAAlB;;AAEA,QAAM+E,YAAY,GAAG,SAAfA,YAAe,CAAC/E,OAAD;AAAA,aAC1B,yEAAmBA,OAAnB,aAD0B;AAAA,KAArB;;AAEA,QAAMgF,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAChF,OAAD;AAAA,aAClC,yEAAmBA,OAAnB,qBADkC;AAAA,KAA7B;;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqBaiF,Y;AACX,4BAAoBnG,OAApB,EAA6C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AAA2B;;;;2CAEV;AAAA,cAApB2E,MAAoB,uEAAH,CAAG;AACnC,iBAAO,KAAK3E,OAAL,CACJvC,GADI,CAGF,uDAHE,EAGY;AACfkE,mBAAO,EAAE,qDADM;AAEfqD,gBAAI,EAAEL,MAAM,CAACyB,QAAP;AAFS,WAHZ,EAOJ1I,IAPI,CAOC,2DAAI,UAACoC,IAAD;AAAA,mBAAUA,IAAI,CAACuG,OAAf;AAAA,WAAJ,CAPD,CAAP;AAQD;;;wCAEenF,O,EAAiB;AAC/B,iBAAO,KAAKlB,OAAL,CAAavC,GAAb,CAAgC,gEAAayD,OAAb,CAAhC,EAAuD;AAC5DS,mBAAO,EAAE;AADmD,WAAvD,CAAP;AAGD;;;gCAEOT,O,EAAiB;AACvB,iBAAO,KAAKlB,OAAL,CACJvC,GADI,CAGF,6DAAUyD,OAAV,CAHE,EAGkB;AACrBS,mBAAO,EAAE;AADY,WAHlB,EAMJjE,IANI,CAMC,2DAAI,UAACoC,IAAD;AAAA,mBAAUA,IAAI,CAACwG,IAAf;AAAA,WAAJ,CAND,CAAP;AAOD;;;mCAEUpF,O,EAAiB;AAC1B,iBAAO,KAAKlB,OAAL,CACJvC,GADI,CAGF,gEAAayD,OAAb,CAHE,EAGqB;AACxBS,mBAAO,EAAE;AADe,WAHrB,EAMJjE,IANI,CAMC,2DAAI,UAACoC,IAAD;AAAA,mBAAUA,IAAI,CAACuG,OAAf;AAAA,WAAJ,CAND,CAAP;AAOD;;;2CAEkBnF,O,EAAiB;AAClC,iBAAO,KAAKlB,OAAL,CACJvC,GADI,CAGF,wEAAqByD,OAArB,CAHE,EAG6B;AAChCS,mBAAO,EAAE;AADuB,WAH7B,EAMJjE,IANI,CAMC,2DAAI,UAACoC,IAAD;AAAA,mBAAUA,IAAI,CAACuG,OAAf;AAAA,WAAJ,CAND,CAAP;AAOD;;;;;;;uBAhDUF,Y,EAAY,kJ;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVvG,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACrBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACaQ;;AAA8B;AAAA;;AAAA;;AAAA;AAAA;;AAC5B;;AAA+B;;AAAU;;AAC3C;;;;;;AAMI;;AAIE;;AACF;;;;;;;;AAGA;;AAAM;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAAW;;;;;;AAMjE;;AACE;;AAA4B;;AAAO;;AACrC;;;;;;;;AAEE;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AAAG;;AAAQ;;AACb;;;;QD5BK2G,mB;AAIX,mCAAoB3J,KAApB,EAA6C;AAAA;;AAAzB,aAAAA,KAAA,GAAAA,KAAA;AAHpB,aAAA4J,MAAA,GAAS,KAAT;AAG+C;;;;mCAEpC;AACT,eAAK/G,SAAL,GAAiB,KAAK7C,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAN,CAAW6D,QAAtB;AAAA,WAAP,CAAhB,CAAjB;AACD;;;sCAEa;AACZ,eAAK6G,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;;;sCAEa;AACZ,eAAKA,MAAL,GAAc,KAAd;AACD;;;iCAEQ;AACP,eAAK5J,KAAL,CAAWkB,QAAX,CAAoB,gFAApB;AACD;;;;;;;uBApBUyI,mB,EAAmB,kH;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,c;AAAA,onB;AAAA;AAAA;ACbhC;;AACE;;AACE;;AACE;;AAA4C;AAAA,mBAAS,IAAAE,WAAA,EAAT;AAAsB,WAAtB;;AAC1C;;AAA6B;;AAAI;;AACnC;;AAEA;;AAAyC;;AAAU;;AAEnD;;AACE;;AAAI;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AACF;;AAAkB;;AAAI;;AACxB;;AACA;;;;AAGF;;AAEA;;AACE;;AACE;;AACE;;;;AAMF;;AACA;;AAGF;;AACA;;AACF;;AAEA;;;;AAGA;;AAKF;;AACF;;AACF;;;;;;;;AApCU;;AAAA;;AAIE;;AAAA;;AASE;;AAAA,6JAAyC,UAAzC,EAAyC,GAAzC;;AAaH;;AAAA,8JAA6C,UAA7C,EAA6C,GAA7C;;;;;;;;;;sEDtBEH,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT7K,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AEbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAQa+K,qB;;;;;uBAAAA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,qM;AAAA;AAAA;ACRlC;;AACE;;AACE;;AAKA;;AACE;;AACE;;AACF;;AACA;;AACE;;;;AACF;;AACA;;AAAkC;;;;AAAkC;;AACtE;;AACF;;AACF;;;;AAjBG;;AAIG;;AAAA;;AAKE;;AAAA;;AAGA;;AAAA;;AAEgC;;AAAA;;;;;;;;;;sEDN3BA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTjL,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;gBAC/B;;;;;;;;;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBI;;;;;;AAGE;;;;;;AAEF;;AAIE;;AAAG;;AAAuC;;AAC5C;;;;;;AADK;;AAAA;;;;;;AAVP;;AACE;;;;AAKA;;AAMF;;;;;;AATI;;AAAA;;AAIA;;AAAA;;;;QDZOgL,e;AAaX,+BAAoBC,aAApB,EAAkD;AAAA;;AAAA;;AAA9B,aAAAA,aAAA,GAAAA,aAAA;AAZpB,aAAAC,UAAA,GAAa,IAAI,wDAAJ,CAAc;AACzBC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AADkB,SAAd,CAAb;AAQA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,aAAA,GAAgC,EAAhC;AAIE,aAAKC,YAAL,GAAoB,KAAKL,aAAL,CACjBM,MADiB,CACV,KAAKJ,KAAL,CAAWK,YADD,EAEjB9J,SAFiB,CAEP,UAAC2J,aAAD,EAAmB;AAC5B,iBAAI,CAACA,aAAL,GAAqBA,aAArB;AACA,iBAAI,CAACD,UAAL,GAAkB,IAAlB;AACD,SALiB,CAApB;AAMD;;;;sCAEa;AACZ,eAAKA,UAAL,GAAkB,KAAlB;AACD;;;qCAEY;AACX,eAAKA,UAAL,GAAkB,IAAlB;AACD;;;sCAEa;AACZ,eAAKE,YAAL,CAAkBG,WAAlB;AACD;;;4BA3BW;AACV,iBAAO,KAAKP,UAAL,CAAgBrJ,GAAhB,CAAoB,OAApB,CAAP;AACD;;;;;;;uBAPUmJ,e,EAAe,qJ;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,4hB;AAAA;AAAA;ACX5B;;AACE;;AACE;;AAA6B;;AAAM;;AACrC;;AACA;;AACE;;AAIE;AAAA,mBAAmB,IAAAU,WAAA,EAAnB;AAAgC,WAAhC,EAAiC,OAAjC,EAAiC;AAAA,mBACxB,IAAAC,UAAA,EADwB;AACZ,WADrB;;AAJF;;AAOA;;AACE;;AAA6B;;AAAM;;AACrC;;AACF;;AACA;;AAaF;;;;AAzBQ;;AAAA;;AAYD;;AAAA;;;;;;;;;;sEDLMX,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlL,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBa4L,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAVlB,CACP,4DADO,EAEP,4DAFO,EAGP,kEAHO,EAIP,6EAJO,EAKP,kEALO,EAMP,iFANO,CAUkB;;;;0HAAhBA,gB,EAAgB;AAAA,uBAXZ,+FAWY,EAXS,mFAWT,EAX0B,uGAW1B;AAX+C,kBAExE,4DAFwE,EAGxE,4DAHwE,EAIxE,kEAJwE,EAKxE,6EALwE,EAMxE,kEANwE,EAOxE,iFAPwE,CAW/C;AAJT,kBAER,+FAFQ;AAIS,O;AAFE,K;;;;;sEAElBA,gB,EAAgB;cAZ5B,sDAY4B;eAZnB;AACRtL,sBAAY,EAAE,CAAC,+FAAD,EAAsB,mFAAtB,EAAuC,uGAAvC,CADN;AAERX,iBAAO,EAAE,CACP,4DADO,EAEP,4DAFO,EAGP,kEAHO,EAIP,6EAJO,EAKP,kEALO,EAMP,iFANO,CAFD;AAURZ,iBAAO,EAAE,CAAC,+FAAD;AAVD,S;AAYmB,Q;;;;;;;;;;;;;;;;;;ACvB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAMwM,MAAM,GAAG,wDAAS,eAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCiBMM,a;AACX,6BACUzH,OADV,EAEU0H,YAFV,EAEoC;AAAA;;AAD1B,aAAA1H,OAAA,GAAAA,OAAA;AACA,aAAA0H,YAAA,GAAAA,YAAA;AACN;;;;+BAEGX,K,EAA2B;AAAA;;AAChC,iBAAOA,KAAK,CAACrJ,IAAN,CACL,oEAAa,GAAb,CADK,EAEL,6EAFK,EAGL,iEAAU,UAACqJ,KAAD;AAAA,mBAAW,OAAI,CAACY,aAAL,CAAmBZ,KAAnB,CAAX;AAAA,WAAV,CAHK,CAAP;AAKD;;;sCAEqBA,K,EAAe;AAAA;;AACnC,iBAAO,IAAI,+CAAJ,CAA+B,UAACa,UAAD,EAAgB;AACpD,gBAAIb,KAAK,CAACjD,MAAN,GAAe,CAAnB,EAAsB;AACpB,kBAAMoD,YAAY,GAAG,OAAI,CAAClH,OAAL,CAClBvC,GADkB,CAGhB,iDAHgB,EAGR;AACTkE,uBAAO,EAAE,qDADA;AAEToF,qBAAK,EAALA;AAFS,eAHQ,EAOlBrJ,IAPkB,CAOb,2DAAI,UAACoC,IAAD;AAAA,uBAAUA,IAAI,CAACuG,OAAf;AAAA,eAAJ,CAPa,EAQlB/I,SARkB,CAQR,UAAOuH,MAAP;AAAA,uBAAkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBoC,uCADqB,GACW,EADX;AAAA,iEAGPpC,MAHO;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGhBzD,+BAHgB;AAAA,wCAIzB6F,aAJyB;AAAA,wCAKnB7F,KAAK,CAACxG,EALa;AAAA,wCAMhBwG,KAAK,CAACyG,cANU;AAAA,wCAOTzG,KAAK,CAAC0G,YAPG;AAAA,wCAQV1G,KAAK,CAAC2G,WARI;AAAA;AASf,iCAAM,KAAKL,YAAL,CACXM,cADW,CACI5G,KAAK,CAACgC,SADV,EAEX6E,SAFW,EAAN;;AATe;AAAA;AAAA;AAKvBrN,8BALuB;AAMvBa,iCANuB;AAOvBqM,wCAPuB;AAQvBC,uCARuB;AASvBvG,kCATuB;AAAA;;AAAA,sCAIX0G,IAJW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAe3BN,oCAAU,CAAC3J,IAAX,CAAgBgJ,aAAhB;AACAC,sCAAY,CAACG,WAAb;;AAhB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB;AAAA,eARQ,CAArB;AA0BD,aA3BD,MA2BO;AACLO,wBAAU,CAAC3J,IAAX,CAAgB,EAAhB;AACD;AACF,WA/BM,CAAP;AAgCD;;;;;;;uBA/CUwJ,a,EAAa,kJ,EAAA,uJ;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACV7H,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;ACnB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaO,QAAMN,KAAK,GAAG,iEACnB,cADmB,EAEnB,2DAFmB,CAAd;AAOA,QAAM6I,YAAY,GAAG,iEAC1B,sBAD0B,EAE1B,2DAF0B,CAArB;AAOA,QAAMhL,WAAW,GAAG,iEAAa,qBAAb,CAApB;AAEA,QAAMoC,MAAM,GAAG,iEACpB,gBADoB,EAEpB,2DAFoB,CAAf;AAOA,QAAM6I,aAAa,GAAG,iEAC3B,wBAD2B,EAE3B,2DAF2B,CAAtB;AAUA,QAAM3J,YAAY,GAAG,iEAAa,uBAAb,CAArB;AAEA,QAAM4J,MAAM,GAAG,iEAAa,eAAb,CAAf;;;;;;;;;;;;;;;;AChDP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaC,W,GAwDX,qBAAoBzL,QAApB,EAA+CwB,WAA/C,EAAyE;AAAA;;AAAA;;AAArD,WAAAxB,QAAA,GAAAA,QAAA;AAA2B,WAAAwB,WAAA,GAAAA,WAAA;AAvD/C,WAAAkK,MAAA,GAAS,mEAAa;AAAA,eACpB,OAAI,CAAC1L,QAAL,CAAca,IAAd,CACE,6DAAO,oDAAMC,IAAb,CADF,EAEE,kEAAW,UAAC6K,MAAD;AAAA,iBACT,OAAI,CAACnK,WAAL,CACGiB,KADH,CACSkJ,MAAM,CAACzK,OAAP,CAAehB,KADxB,EAC+ByL,MAAM,CAACzK,OAAP,CAAed,QAD9C,EAEGS,IAFH,CAGI,2DAAI,UAAC+K,WAAD;AAAA,mBACF,mEAAa;AACX1K,qBAAO,EAAE;AACP4B,wBAAQ,EAAE,IADH;AAEPM,0BAAU,EAAE;AACVlD,uBAAK,EAAE0L,WAAW,CAAC1L,KADT;AAEViE,yBAAO,EAAEyH,WAAW,CAACzH;AAFX;AAFL;AADE,aAAb,CADE;AAAA,WAAJ,CAHJ,EAcI,kEAAW;AAAA,mBAAM,gDAAG,mEAAH,CAAN;AAAA,WAAX,CAdJ,CADS;AAAA,SAAX,CAFF,CADoB;AAAA,OAAb,CAAT;AAwBA,WAAA0H,OAAA,GAAU,mEAAa;AAAA,eACrB,OAAI,CAAC7L,QAAL,CAAca,IAAd,CACE,6DAAO,qDAAOC,IAAd,CADF,EAEE,kEAAW,UAAC6K,MAAD;AAAA,iBACT,OAAI,CAACnK,WAAL,CACGkB,MADH,CACUiJ,MAAM,CAACzK,OAAP,CAAehB,KADzB,EACgCyL,MAAM,CAACzK,OAAP,CAAed,QAD/C,EAEGS,IAFH,CAGI,2DAAI,UAAC+K,WAAD;AAAA,mBACF,mEAAa;AACX1K,qBAAO,EAAE;AACP4B,wBAAQ,EAAE,IADH;AAEPM,0BAAU,EAAE;AACVlD,uBAAK,EAAE0L,WAAW,CAAC1L,KADT;AAEViE,yBAAO,EAAEyH,WAAW,CAACzH;AAFX;AAFL;AADE,aAAb,CADE;AAAA,WAAJ,CAHJ,EAcI,kEAAW;AAAA,mBAAM,gDAAG,oEAAH,CAAN;AAAA,WAAX,CAdJ,CADS;AAAA,SAAX,CAFF,CADqB;AAAA,OAAb,CAAV;AAwBA,WAAA2H,aAAA,GAAgB,mEAAa;AAAA,eAC3B,OAAI,CAAC9L,QAAL,CAAca,IAAd,CACE,6DAAO,2DAAaC,IAApB,CADF,EAEE,2DAAI,UAAC6K,MAAD;AAAA,iBAA8C,sFAA9C;AAAA,SAAJ,CAFF,CAD2B;AAAA,OAAb,CAAhB;AAO2E,K;;;uBAxDhEF,W,EAAW,6G,EAAA,kJ;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACnBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMM,YAAY,GAAG,kEACnB,wDADmB,EAEnB,uDAAG,0DAAH,EAAiB,UAAClJ,KAAD;AAAA,UAAU3B,OAAV,QAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACpC2B,KADoC,CAAC,EAChC;AACRO,kBAAU,EAAElC,OAAO,CAACkC,UADZ;AAERN,gBAAQ,EAAE5B,OAAO,CAAC4B;AAFV,OADgC,CAAzB;AAAA,KAAjB,CAFmB,EAOnB,uDAAG,2DAAH,EAAkB,UAACD,KAAD;AAAA,UAAU3B,OAAV,SAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACrC2B,KADqC,CAAC,EACjC;AACRO,kBAAU,EAAElC,OAAO,CAACkC,UADZ;AAERN,gBAAQ,EAAE5B,OAAO,CAAC4B;AAFV,OADiC,CAAzB;AAAA,KAAlB,CAPmB,EAYnB,uDAAG,oDAAH,EAAW,UAACD,KAAD;AAAA,aAAY,MAAD,OAAC,CAAD,kBACjBA,KADiB,CAAC,EACb;AACRO,kBAAU,EAAE,IADJ;AAERN,gBAAQ,EAAE;AAFF,OADa,CAAZ;AAAA,KAAX,CAZmB,CAArB;;AAmBO,aAASkJ,WAAT,CAAqBnJ,KAArB,EAA4B8I,MAA5B,EAAoC;AACzC,aAAOI,YAAY,CAAClJ,KAAD,EAAQ8I,MAAR,CAAnB;AACD;;;;;;;;;;;;;;;;;ACjBD;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMM,YAAY,GAAc;AACrCnJ,cAAQ,EAAE,KAD2B;AAErCM,gBAAU,EAAE;AAFyB,KAAhC;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,QAAM8I,aAAa,GAAG,iEAAa,6BAAb,CAAtB;AACA,QAAMC,oBAAoB,GAAG,iEAClC,qCADkC,EAElC,2DAFkC,CAA7B;AAaA,QAAMC,oBAAoB,GAAG,iEAClC,sCADkC,EAElC,2DAFkC,CAA7B;AAMA,QAAMC,2BAA2B,GAAG,iEACzC,8CADyC,EAEzC,2DAFyC,CAApC;AAWA,QAAMC,yBAAyB,GAAG,iEACvC,2CADuC,EAEvC,2DAFuC,CAAlC;AAMA,QAAMC,gCAAgC,GAAG,iEAC9C,mDAD8C,EAE9C,2DAF8C,CAAzC;AAYA,QAAMC,0BAA0B,GAAG,iEACxC,6CADwC,EAExC,2DAFwC,CAAnC;AAOA,QAAMC,iCAAiC,GAAG,iEAC/C,qDAD+C,EAE/C,2DAF+C,CAA1C;;;;;;;;;;;;;;;;AC3DP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBaC,gB,GAmGX,0BACU1M,QADV,EAEUD,KAFV,EAGU4M,gBAHV,EAG4C;AAAA;;AAAA;;AAFlC,WAAA3M,QAAA,GAAAA,QAAA;AACA,WAAAD,KAAA,GAAAA,KAAA;AACA,WAAA4M,gBAAA,GAAAA,gBAAA;AArGV,WAAAC,cAAA,GAAiB,mEAAa;AAAA,eAC5B,OAAI,CAAC5M,QAAL,CAAca,IAAd,CACE,6DAAO,kEAAcC,IAArB,CADF,EAEE,iEAAU,UAAC6K,MAAD;AAAA,iBACR,gDAAGA,MAAH,EAAW9K,IAAX,CACE,sEAAe,OAAI,CAACd,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAjB;AAAA,WAAP,CAAhB,CAAf,CADF,CADQ;AAAA,SAAV,CAFF,EAOE,gEAAS;AAAA;AAAA,cAAE0M,MAAF;AAAA,cAAU9I,KAAV;;AAAA,iBACP,OAAI,CAAC8J,gBAAL,CAAsBE,MAAtB,CAA6BhK,KAAK,CAACO,UAAN,CAAiBe,OAA9C,EAAuDtD,IAAvD,CACE,2DAAI,UAAC3B,UAAD;AAAA,mBAAiB;AACnB4B,kBAAI,EAAE,yEAAqBA,IADR;AAEnBI,qBAAO,EAAE;AACPhC,0BAAU,EAAVA;AADO;AAFU,aAAjB;AAAA,WAAJ,CADF,CADO;AAAA,SAAT,CAPF,CAD4B;AAAA,OAAb,CAAjB;AAqBA,WAAA4N,qBAAA,GAAwB,mEAAa;AAAA,eACnC,OAAI,CAAC9M,QAAL,CAAca,IAAd,CACE,6DAAO,yEAAqBC,IAA5B,CADF,EAEE,iEAAU,UAAC6K,MAAD;AAAA,iBACR,gDAAGA,MAAH,EAAW9K,IAAX,CACE,sEAAe,OAAI,CAACd,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAjB;AAAA,WAAP,CAAhB,CAAf,CADF,CADQ;AAAA,SAAV,CAFF,EAOE,gEAAS;AAAA;AAAA,cAAE0M,MAAF;AAAA,cAAU9I,KAAV;;AAAA,iBACP,OAAI,CAAC8J,gBAAL,CACGP,oBADH,CACwBvJ,KAAK,CAACO,UAAN,CAAiBe,OADzC,EACkDwH,MAAM,CAACzK,OAAP,CAAeqD,KADjE,EAEG1D,IAFH,CAGI,2DAAI;AAAA,mBAAO;AACTC,kBAAI,EAAE,gFAA4BA,IADzB;AAETI,qBAAO,EAAE;AACPqD,qBAAK,EAAEoH,MAAM,CAACzK,OAAP,CAAeqD;AADf;AAFA,aAAP;AAAA,WAAJ,CAHJ,CADO;AAAA,SAAT,CAPF,CADmC;AAAA,OAAb,CAAxB;AAuBA,WAAAwI,0BAAA,GAA6B,mEAAa;AAAA,eACxC,OAAI,CAAC/M,QAAL,CAAca,IAAd,CACE,6DAAO,8EAA0BC,IAAjC,CADF,EAEE,iEAAU,UAAC6K,MAAD;AAAA,iBACR,gDAAGA,MAAH,EAAW9K,IAAX,CACE,sEAAe,OAAI,CAACd,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAjB;AAAA,WAAP,CAAhB,CAAf,CADF,CADQ;AAAA,SAAV,CAFF,EAOE,gEAAS;AAAA;AAAA,cAAE0M,MAAF;AAAA,cAAU9I,KAAV;;AAAA,iBACP,OAAI,CAAC8J,gBAAL,CACGL,yBADH,CAEIzJ,KAAK,CAACO,UAAN,CAAiBe,OAFrB,EAGIwH,MAAM,CAACzK,OAAP,CAAemD,OAHnB,EAKGxD,IALH,CAMI,2DAAI;AAAA,mBAAO;AACTC,kBAAI,EAAE,qFAAiCA,IAD9B;AAETI,qBAAO,EAAE;AACPmD,uBAAO,EAAEsH,MAAM,CAACzK,OAAP,CAAemD;AADjB;AAFA,aAAP;AAAA,WAAJ,CANJ,CADO;AAAA,SAAT,CAPF,CADwC;AAAA,OAAb,CAA7B;AA0BA,WAAA2I,2BAAA,GAA8B,mEAAa;AAAA,eACzC,OAAI,CAAChN,QAAL,CAAca,IAAd,CACE,6DAAO,+EAA2BC,IAAlC,CADF,EAEE,iEAAU,UAAC6K,MAAD;AAAA,iBACR,gDAAGA,MAAH,EAAW9K,IAAX,CACE,sEAAe,OAAI,CAACd,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAjB;AAAA,WAAP,CAAhB,CAAf,CADF,CADQ;AAAA,SAAV,CAFF,EAOE,gEAAS;AAAA;AAAA,cAAE0M,MAAF;AAAA,cAAU9I,KAAV;;AAAA,iBACP,OAAI,CAAC8J,gBAAL,CACGH,0BADH,CAEI3J,KAAK,CAACO,UAAN,CAAiBe,OAFrB,EAGIwH,MAAM,CAACzK,OAAP,CAAemD,OAHnB,EAIIsH,MAAM,CAACzK,OAAP,CAAeuD,YAJnB,EAMG5D,IANH,CAOI,2DAAI;AAAA,mBAAO;AACTC,kBAAI,EAAE,sFAAkCA,IAD/B;AAETI,qBAAO,EAAE;AACPmD,uBAAO,EAAEsH,MAAM,CAACzK,OAAP,CAAemD,OADjB;AAEPI,4BAAY,EAAEkH,MAAM,CAACzK,OAAP,CAAeuD;AAFtB;AAFA,aAAP;AAAA,WAAJ,CAPJ,CADO;AAAA,SAAT,CAPF,CADyC;AAAA,OAAb,CAA9B;AAgCI,K;;;uBAvGOiI,gB,EAAgB,6G,EAAA,yG,EAAA,uK;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMO,kBAAkB,GAAG,kEACzB,8DADyB,EAEzB,uDAAG,wEAAH,EAAyB,UAACpK,KAAD;AAAA,UAAU3B,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBAC5C2B,KAD4C,CAAC,EACxC;AACR3D,kBAAU,EAAEgC,OAAO,CAAChC;AADZ,OADwC,CAAzB;AAAA,KAAzB,CAFyB,EAMzB,uDAAG,+EAAH,EAAgC,UAAC2D,KAAD;AAAA,UAAU3B,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACnD2B,KADmD,CAAC,EAC/C;AACR3D,kBAAU,EAAE,MAAF,OAAE,CAAF,kBACL2D,KAAK,CAAC3D,UADD,CAAE,sBAETgC,OAAO,CAACqD,KAAR,CAAcxG,EAFL,EAEUmD,OAAO,CAACqD,KAFlB;AADJ,OAD+C,CAAzB;AAAA,KAAhC,CANyB,EAazB,uDAAG,oFAAH,EAAqC,UAAC1B,KAAD,UAAwB;AAAA,UAAd3B,OAAc,UAAdA,OAAc;AAC3D,UAAMhC,UAAU,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK2D,KAAK,CAAC3D,UAAX,CAAnB;AACA,aAAOA,UAAU,CAACgC,OAAO,CAACmD,OAAT,CAAjB;AAEA,aAAO,MAAP,OAAO,CAAP,kBACKxB,KADL,CAAO,EACG;AACR3D,kBAAU,EAAE,MAAF,OAAE,CAAF,EAAE,EACPA,UADO;AADJ,OADH,CAAP;AAMD,KAVD,CAbyB,EAwBzB,uDAAG,qFAAH,EAAsC,UAAC2D,KAAD,UAAwB;AAAA,UAAd3B,OAAc,UAAdA,OAAc;AAC5D,UAAMhC,UAAU,GAAG,MAAH,OAAG,CAAH,EAAG,EAAK2D,KAAK,CAAC3D,UAAX,CAAnB;AACA,UAAMgO,SAAS,GAAGhO,UAAU,CAACgC,OAAO,CAACmD,OAAT,CAA5B;AAEA,aAAO,MAAP,OAAO,CAAP,kBACKxB,KADL,CAAO,EACG;AACR3D,kBAAU,EAAE,MAAF,OAAE,CAAF,kBACLA,UADK,CAAE,sBAETgC,OAAO,CAACmD,OAFC,EAES,MAAF,OAAE,CAAF,kBACZ6I,SADY,CAAE,EACL;AACZzI,sBAAY,EAAEvD,OAAO,CAACuD;AADV,SADK,CAFT;AADJ,OADH,CAAP;AAUD,KAdD,CAxByB,CAA3B;;AAyCO,aAAS0I,iBAAT,CAA2BtK,KAA3B,EAAkC8I,MAAlC,EAA0C;AAC/C,aAAOsB,kBAAkB,CAACpK,KAAD,EAAQ8I,MAAR,CAAzB;AACD;;;;;;;;;;;;;;;;;AC5CD;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMM,YAAY,GAAoB;AAC3C/M,gBAAU,EAAE;AAD+B,KAAtC;;;;;;;;;;;;;;;;ACRP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,QAAMkO,QAAQ,GAAG,iEAAa,oBAAb,CAAjB;AACA,QAAMC,eAAe,GAAG,iEAC7B,4BAD6B,EAE7B,2DAF6B,CAAxB;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,Y,GAuBX,sBACUtN,QADV,EAEUD,KAFV,EAGUuF,YAHV,EAGoC;AAAA;;AAAA;;AAF1B,WAAAtF,QAAA,GAAAA,QAAA;AACA,WAAAD,KAAA,GAAAA,KAAA;AACA,WAAAuF,YAAA,GAAAA,YAAA;AAzBV,WAAAiI,SAAA,GAAY,mEAAa;AAAA,eACvB,OAAI,CAACvN,QAAL,CAAca,IAAd,CACE,6DAAO,yDAASC,IAAhB,CADF,EAEE,iEAAU,UAAC6K,MAAD;AAAA,iBACR,gDAAGA,MAAH,EAAW9K,IAAX,CACE,sEAAe,OAAI,CAACd,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAACmF,MAAjB;AAAA,WAAP,CAAhB,CAAf,CADF,CADQ;AAAA,SAAV,CAFF,EAOE,gEAAS;AAAA;AAAA,cAAE2D,MAAF;AAAA,cAAU9I,KAAV;;AAAA,iBACP,OAAI,CAACyC,YAAL,CAAkBkI,gBAAlB,CAAmC3K,KAAK,CAACqF,WAAzC,EAAsDrH,IAAtD,CACE,2DAAI,UAACmH,MAAD;AAAA,mBAAa;AACflH,kBAAI,EAAE,gEAAgBA,IADP;AAEfI,qBAAO,EAAE;AACP8G,sBAAM,+BAAMnF,KAAK,CAACoF,aAAZ,sBAA8BD,MAA9B,EADC;AAEPG,oBAAI,EAAEtF,KAAK,CAACqF,WAAN,GAAoB;AAFnB;AAFM,aAAb;AAAA,WAAJ,CADF,CADO;AAAA,SAAT,CAPF,CADuB;AAAA,OAAb,CAAZ;AA0BI,K;;;uBA3BOoF,Y,EAAY,6G,EAAA,yG,EAAA,uJ;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMG,cAAc,GAAG,kEACrB,0DADqB,EAErB,uDAAG,+DAAH,EAAoB,UAAC5K,KAAD;AAAA,UAAU3B,OAAV,UAAUA,OAAV;AAAA,aAAyB,MAAD,OAAC,CAAD,kBACvC2B,KADuC,CAAC,EACnC;AACRoF,qBAAa,EAAE/G,OAAO,CAAC8G,MADf;AAERE,mBAAW,EAAEhH,OAAO,CAACiH;AAFb,OADmC,CAAzB;AAAA,KAApB,CAFqB,CAAvB;;AASO,aAASuF,aAAT,CAAuB7K,KAAvB,EAA8B8I,MAA9B,EAAsC;AAC3C,aAAO8B,cAAc,CAAC5K,KAAD,EAAQ8I,MAAR,CAArB;AACD;;;;;;;;;;;;;;;;;ACRD;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMM,YAAY,GAAgB;AACvChE,mBAAa,EAAE,EADwB;AAEvCC,iBAAW,EAAE;AAF0B,KAAlC;;;;;;;;;;;;;;;;ACPP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUayF,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBAHb,CAAC,4DAAD,EAAe,qEAAf,CAGa;;;;0HAAXA,W,EAAW;AAAA,uBAJP,qEAIO;AAJO,kBACnB,4DADmB,EACL,qEADK,CAIP;AAHqB,kBACjC,qEADiC;AAGrB,O;AAFE,K;;;;;sEAEbA,W,EAAW;cALvB,sDAKuB;eALd;AACRtO,sBAAY,EAAE,CAAC,qEAAD,CADN;AAERX,iBAAO,EAAE,CAAC,4DAAD,EAAe,qEAAf,CAFD;AAGRZ,iBAAO,EAAE,CAAC,qEAAD;AAHD,S;AAKc,Q;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AAOE;;AACF;;;;;;AALE,gHAAyC,OAAzC,EAAyC,YAAzC,EAAyC,QAAzC,EAAyC,aAAzC;;AAIK;;AAAA;;;;;;AAIL;;;;;;AAA+B;;;;;;AAZnC;;AACE;;AAUA;;AAGF;;;;;;;;AAZI;;AAAA,mGAA0C,UAA1C,EAA0C,GAA1C;;;;;;AAeF;;AACE;;AACF;;;;QDXW8P,c,GALb;AAAA;;AAME,WAAAC,OAAA,GAAkB,6BAAlB;AACS,WAAAC,UAAA,GAAyB,MAAzB;AAEA,WAAAC,WAAA,GAAsB,CAAtB;AACA,WAAAC,KAAA,GAAgB,MAAhB;AACA,WAAAC,MAAA,GAAiB,GAAjB;AACV,K;;;uBAPYL,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,qR;AAAA;AAAA;ACR3B;;AAgBA;;;;;;AAhBc,qFAAwB,UAAxB,EAAwB,GAAxB;;;;;;;;;sEDQDA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT/O,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;gBAExB;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaamP,e;;;;;YAAAA;;;;yBAAAA,e;AAAe,O;AAAA,gBAHjB,CAAC,4DAAD,EAAe,+DAAf,EAA4B,4DAA5B,EAA0C,+DAA1C,CAGiB;;;;0HAAfA,e,EAAe;AAAA,uBAJX,mFAIW,EAJS,yFAIT;AAJ6B,kBAC7C,4DAD6C,EAC/B,+DAD+B,EAClB,4DADkB,EACJ,+DADI,CAI7B;AAHoC,kBACpD,mFADoD,EAChC,yFADgC;AAGpC,O;AAFwB,K;;;;;sEAEvCA,e,EAAe;cAL3B,sDAK2B;eALlB;AACR7O,sBAAY,EAAE,CAAC,mFAAD,EAAqB,yFAArB,CADN;AAERX,iBAAO,EAAE,CAAC,4DAAD,EAAe,+DAAf,EAA4B,4DAA5B,EAA0C,+DAA1C,CAFD;AAGRZ,iBAAO,EAAE,CAAC,mFAAD,EAAqB,yFAArB;AAHD,S;AAKkB,Q;;;;;;;;;;;;;;;;;;ACb5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;ACSI;;AACE;;AAQF;;;;;;AAPI;;AAAA,sGAA6B,QAA7B,EAA6B,qEAA7B;;;;;;;;AAQJ;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAA6B;;AAAe;;AAC9C;;;;;;;;AAEE;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AAA6B;;AAAQ;;AACvC;;;;;;;;QDZOqQ,kB;AAMX,kCAAoBtO,MAApB,EAA4CE,KAA5C,EAAqE;AAAA;;AAAjD,aAAAF,MAAA,GAAAA,MAAA;AAAwB,aAAAE,KAAA,GAAAA,KAAA;AAA2B;;;;mCAE5D;AAAA;;AACT,eAAK6C,SAAL,GAAiB,KAAK7C,KAAL,CAAWc,IAAX,CAAgB,2DAAO,UAACgC,KAAD;AAAA,mBAAWA,KAAK,CAAC5D,IAAN,CAAW6D,QAAtB;AAAA,WAAP,CAAhB,CAAjB;AACA,eAAKkD,UAAL,GAAkB,KAAKjG,KAAL,CAAWc,IAAX,CAChB,2DACE,UAACgC,KAAD;AAAA,mBACEA,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,IACA2D,KAAK,CAAC3D,UAAN,CAAiBA,UAAjB,CAA4B,OAAI,CAACqF,KAAL,CAAWxG,EAAvC,MAA+CmI,SAFjD;AAAA,WADF,CADgB,CAAlB;AAOD;;;kCAESkI,M,EAAQ;AAAA;;AAChBA,gBAAM,CAACC,eAAP;AACAD,gBAAM,CAACE,cAAP;AAEA,eAAK1L,SAAL,CAAe/B,IAAf,CAAoB,4DAAK,CAAL,CAApB,EAA6BJ,SAA7B,CAAuC,UAACqC,QAAD,EAAc;AACnD,gBAAIA,QAAJ,EAAc;AACZ,qBAAI,CAAC/C,KAAL,CAAWkB,QAAX,CACE,yGAAqB;AACnBC,uBAAO,EAAE;AACPqD,uBAAK,EAAE,MAAF,OAAE,CAAF,kBACA,OAAI,CAACA,KADL,CAAE,EACQ;AACbE,gCAAY,EAAE;AADD,mBADR;AADA;AADU,eAArB,CADF;AAUD,aAXD,MAWO;AACL,qBAAI,CAAC5E,MAAL,CAAYkB,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;AACF,WAfD;AAgBD;;;oCAEWqN,M,EAAQ;AAClBA,gBAAM,CAACC,eAAP;AACAD,gBAAM,CAACE,cAAP;AAEA,eAAKvO,KAAL,CAAWkB,QAAX,CACE,8GAA0B;AACxBC,mBAAO,EAAE;AACPmD,qBAAO,EAAE,KAAKE,KAAL,CAAWxG;AADb;AADe,WAA1B,CADF;AAOD;;;;;;;uBApDUoQ,kB,EAAkB,uH,EAAA,kH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,ka;AAAA;AAAA;ACjB/B;;AACE;;AACE;;AAKA;;AAAiC;;AAA0B;;AAC3D;;AAAkB;;;;AAAoC;;AACtD;;AAUA;;;;AAOA;;AAKF;;AACF;;;;;;AAhCG;;AAGG;;AAAA,kGAA0B,aAA1B,EAA0B,KAA1B;;AAI+B;;AAAA;;AACf;;AAAA;;AACkB;;AAAA;;AAWlC;;AAAA,+JAAqD,UAArD,EAAqD,GAArD;;;;;;;;;;sEDHOA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTtP,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;gBAC5B;;;;;;;;;;;;;;;;;;;;AElBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawP,oB;AALb;AAAA;;AAYW,aAAAC,MAAA,GAAiB,GAAjB;AAaV;;;;4BAX2C;AACxC,cAAI,KAAKC,MAAT,EAAiB;AACf,gBAAI,KAAKC,MAAL,IAAe,CAAnB,EAAsB;AACpB,qBAAO,KAAKD,MAAL,CAAYE,IAAnB;AACD,aAFD,MAEO,IAAI,KAAKD,MAAL,IAAe,CAAnB,EAAsB;AAC3B,qBAAO,KAAKD,MAAL,CAAYG,MAAnB;AACD,aAFM,MAEA;AACL,qBAAO,KAAKH,MAAL,CAAYI,GAAnB;AACD;AACF;AACF;;;;;;;uBAnBUN,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA,iB;AAAA;AAAA;;;;;;;;;;;;;ACPjC;;AAAK;;;;AAAwC;;;;AAAxC;;AAAA;;;;;;;;;sEDOQA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT1P,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;gBAC9B;;;gBACA;;;gBAKA;;;gBAEA,yD;iBAAY,W;;;;;;;;;;;;;;;;;;;;AEhBf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa+P,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAHhB,CAAC,4DAAD,EAAe,qDAAf,CAGgB;;;;0HAAdA,c,EAAc;AAAA,uBAJV,gFAIU;AAJO,kBACtB,4DADsB,EACR,qDADQ,CAIP;AAHU,kBACzB,gFADyB;AAGV,O;AAFE,K;;;;;sEAEhBA,c,EAAc;cAL1B,sDAK0B;eALjB;AACRzP,sBAAY,EAAE,CAAC,gFAAD,CADN;AAERX,iBAAO,EAAE,CAAC,4DAAD,EAAe,qDAAf,CAFD;AAGRZ,iBAAO,EAAE,CAAC,gFAAD;AAHD,S;AAKiB,Q;;;;;;;;;;;;;;;;;;ACX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGI;;AAAmC;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAS;;;;;;;;AAE/D;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAS;;;;;;AAHrC;;AACE;;AACA;;AAGF;;;;;;;;AAJK;;AAAA,uFAA+B,UAA/B,EAA+B,GAA/B;;;;QDIMiR,iB;AALb;AAAA;;AASY,aAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AAIV,aAAAC,IAAA,GAAgB,KAAhB;AAoBD;;;;mCAlBY;AACT,eAAKC,QAAL;AACD;;;mCAEU;AACT,eAAKF,QAAL,CAAcG,IAAd;AACA,eAAKC,aAAL,GAAqB,KAAKC,OAA1B;AACA,eAAKJ,IAAL,GAAY,IAAZ;AACD;;;mCAEU;AACT,cAAI,KAAKI,OAAL,CAAapI,MAAb,GAAsB,KAAKA,MAA3B,IAAqC,KAAKA,MAAL,IAAe,CAAxD,EAA2D;AACzD,iBAAKmI,aAAL,GAAqB,KAAKC,OAAL,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,KAAKrI,MAAL,GAAc,CAApC,IAAyC,MAA9D;AACD,WAFD,MAEO;AACL,iBAAKmI,aAAL,GAAqB,KAAKC,OAA1B;AACD;;AACD,eAAKJ,IAAL,GAAY,KAAZ;AACD;;;;;;;uBA3BUF,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,gN;AAAA;AAAA;ACP9B;;AACE;;AACA;;AAMF;;;;AAPiC;;AAAA;;AAC1B;;AAAA;;;;;;;;;sEDKMA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTlQ,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;gBAC3B;;;gBACA;;;gBAEA;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWawQ,qB;AAGX,qCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFV,aAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AAEoC;;;;gCAG/BC,M,EAAQ;AACrB,cAAMC,aAAa,GAAG,KAAKH,UAAL,CAAgBI,aAAhB,CAA8BC,QAA9B,CAAuCH,MAAvC,CAAtB;;AACA,cAAI,CAACC,aAAL,EAAoB;AAClB,iBAAKF,eAAL,CAAqBN,IAArB;AACD;AACF;;;;;;;uBAXUI,qB,EAAqB,yH;AAAA,K;;;YAArBA,qB;AAAqB,8C;AAAA;AAAA;;mBAArB,0B;AAAsB,W,EAAA,K,EAAA,+D;;;;;;;;;;sEAAtBA,qB,EAAqB;cAHjC,uDAGiC;eAHvB;AACT1Q,kBAAQ,EAAE;AADD,S;AAGuB,Q;;;;;;gBAC/B;;;gBAIA,0D;iBAAa,gB,EAAkB,CAAC,eAAD,C;;;;;;;;;;;;;;;;;;;;AChBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaiR,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,4DAAD,CAGkB;;;;0HAAhBA,gB,EAAgB;AAAA,uBAJZ,4FAIY;AAJS,kBAC1B,4DAD0B,CAIT;AAHL,kBACZ,4FADY;AAGK,O;AAFI,K;;;;;sEAEpBA,gB,EAAgB;cAL5B,sDAK4B;eALnB;AACRzQ,sBAAY,EAAE,CAAC,4FAAD,CADN;AAERX,iBAAO,EAAE,CAAC,4DAAD,CAFD;AAGRZ,iBAAO,EAAE,CAAC,4FAAD;AAHD,S;AAKmB,Q;;;;;;;;;;;;;;;;;;ACT7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaiS,Y;;;;;;;kCACD5O,K,EAAa;AACrB,cAAM6O,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW/O,KAAK,GAAG,EAAnB,CAAd;AACA,cAAMgP,OAAO,GAAGhP,KAAK,GAAG6O,KAAK,GAAG,EAAhC;AAEA,2BAAUA,KAAV,eAAoBG,OAApB;AACD;;;;;;;uBANUJ,Y;AAAY,K;;;;YAAZA,Y;AAAY;;;;;sEAAZA,Y,EAAY;cAHxB,kDAGwB;eAHnB;AACJ3Q,cAAI,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;ACLzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMagR,U;;;;;;;kCACDjP,K,EAAc;AACtB,iBAAOA,KAAK,CAACqF,GAAN,CAAU,UAACxB,KAAD;AAAA,mBAAWA,KAAK,CAAC5F,IAAjB;AAAA,WAAV,EAAiCiR,IAAjC,CAAsC,IAAtC,CAAP;AACD;;;;;;;uBAHUD,U;AAAU,K;;;;YAAVA,U;AAAU;;;;;sEAAVA,U,EAAU;cAHtB,kDAGsB;eAHjB;AACJhR,cAAI,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;ACNvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAMakR,Y;;;;;;;kCACDnP,K,EAAa;AACrB,cAAMoP,IAAI,GAAG,IAAI,wCAAJ,CAAe;AAC1BC,mBAAO,EAAE;AADiB,WAAf,EAEVC,MAFU,CAEHtP,KAFG,CAAb;;AAGA,cAAIoP,IAAI,CAACG,UAAL,CAAgB,KAAhB,CAAJ,EAA4B;AAC1B,mBAAOH,IAAI,CAACjB,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD;;AAED,iBAAOiB,IAAP;AACD;;;;;;;uBAVUD,Y;AAAY,K;;;;YAAZA,Y;AAAY;;;;;sEAAZA,Y,EAAY;cAHxB,kDAGwB;eAHnB;AACJlR,cAAI,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;ACNzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYauR,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBAHb,CAAC,4DAAD,CAGa;;;;0HAAXA,W,EAAW;AAAA,uBAJP,qFAIO,EAJY,oEAIZ,EAJ0B,oEAI1B,EAJwC,8DAIxC;AAJkD,kBAC9D,4DAD8D,CAIlD;AAHA,kBACZ,qFADY,EACO,oEADP,EACqB,oEADrB,EACmC,8DADnC;AAGA,O;AAF6C,K;;;;;sEAExDA,W,EAAW;cALvB,sDAKuB;eALd;AACRtR,sBAAY,EAAE,CAAC,qFAAD,EAAoB,oEAApB,EAAkC,oEAAlC,EAAgD,8DAAhD,CADN;AAERX,iBAAO,EAAE,CAAC,4DAAD,CAFD;AAGRZ,iBAAO,EAAE,CAAC,qFAAD,EAAoB,oEAApB,EAAkC,oEAAlC,EAAgD,8DAAhD;AAHD,S;AAKc,Q;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKa8S,iB;;;;;;;kCACDzP,K,EAAgD;AAAA,cAAjC0P,GAAiC,uEAAnB,CAAmB;AAAA,cAAhBC,GAAgB,uEAAF,EAAE;AACxD,iBAAOb,IAAI,CAACc,KAAL,CAAY,CAAC5P,KAAK,GAAG0P,GAAT,KAAiBC,GAAG,GAAGD,GAAvB,CAAD,GAAgC,GAA3C,CAAP;AACD;;;;;;;uBAHUD,iB;AAAiB,K;;;;YAAjBA,iB;AAAiB;;;;;sEAAjBA,iB,EAAiB;cAH7B,kDAG6B;eAHxB;AACJxR,cAAI,EAAE;AADF,S;AAGwB,Q;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4R,c;AAKX,8BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJZ,aAAAC,OAAA,GAAuB,IAAI,gEAAJ,CAAgB;AAC7C,0BAAgB;AAD6B,SAAhB,CAAvB;AAIgC;;;;4BAE1BjT,I,EAAkD;AAAA,cAApCiM,KAAoC,uEAAJ,EAAI;AAC9D,iBAAO,KAAK+G,IAAL,CAAUrQ,GAAV,CAAiB3C,IAAjB,EAAuB;AAC5BkT,kBAAM,EAAEjH;AADoB,WAAvB,CAAP;AAGD;;;6BAEiBjM,I,EAAcmT,I,EAA6C;AAAA,cAApClH,KAAoC,uEAAJ,EAAI;AAC3E,iBAAO,KAAK+G,IAAL,CAAU1N,IAAV,CAAkBtF,IAAlB,EAAwBmT,IAAxB,EAA8B;AACnCD,kBAAM,EAAEjH,KAD2B;AAEnCgH,mBAAO,EAAE,KAAKA;AAFqB,WAA9B,CAAP;AAID;;;4BAEgBjT,I,EAAcmT,I,EAA6C;AAAA,cAApClH,KAAoC,uEAAJ,EAAI;AAC1E,iBAAO,KAAK+G,IAAL,CAAUzM,GAAV,CAAiBvG,IAAjB,EAAuBmT,IAAvB,EAA6B;AAClCD,kBAAM,EAAEjH,KAD0B;AAElCgH,mBAAO,EAAE,KAAKA;AAFoB,WAA7B,CAAP;AAID;;;8BAGCjT,I,EACAmT,I,EACkC;AAAA,cAAlClH,KAAkC,uEAAF,EAAE;AAElC,iBAAO,KAAK+G,IAAL,CAAUvM,KAAV,CAAmBzG,IAAnB,EAAyBmT,IAAzB,EAA+B;AACpCD,kBAAM,EAAEjH,KAD4B;AAEpCgH,mBAAO,EAAE,KAAKA;AAFsB,WAA/B,CAAP;AAID;;;gCAEmBjT,I,EAAkD;AAAA,cAApCiM,KAAoC,uEAAJ,EAAI;AACpE,iBAAO,KAAK+G,IAAL,WAAoBhT,IAApB,EAA0B;AAC/BkT,kBAAM,EAAEjH,KADuB;AAE/BgH,mBAAO,EAAE,KAAKA;AAFiB,WAA1B,CAAP;AAID;;;;;;;uBA3CUF,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVjO,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMsO,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./movies/movies.module').then((m) => m.MoviesModule),\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\n  },\n  {\n    path: 'favourites',\n    loadChildren: () =>\n      import('./favourites/favourites.module').then((m) => m.FavouritesModule),\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'imdb-clone';\n}\n","<app-navigation></app-navigation>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavigationModule } from './navigation/navigation.module';\nimport { MoviesModule } from './movies/movies.module';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { AuthModule } from './auth/auth.module';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { authReducer } from './store/auth/auth.reducer';\nimport { AuthEffects } from './store/auth/auth.effects';\nimport { FavouritesModule } from './favourites/favourites.module';\nimport { FavouriteEffects } from './store/favourites/favourites.effects';\nimport { favouritesReducer } from './store/favourites/favourites.reducer';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NavigationModule,\n    MoviesModule,\n    AuthModule,\n    FavouritesModule,\n    HttpClientModule,\n    InlineSVGModule,\n    StoreModule.forRoot({\n      auth: authReducer,\n      favourites: favouritesReducer,\n    }),\n    EffectsModule.forRoot([AuthEffects, FavouriteEffects]),\n    StoreDevtoolsModule.instrument({\n      name: 'IMDb clone',\n    }),\n    LazyLoadImageModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\nimport { NotLoggedGuard } from './shared/guards/not-logged/not-logged.guard';\n\nconst routes: Routes = [\n  { path: 'signIn', component: LoginComponent, canActivate: [NotLoggedGuard] },\n  { path: 'signUp', component: SignUpComponent, canActivate: [NotLoggedGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRouting {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './pages/login/login.component';\nimport { AuthRouting } from './auth-routing.module';\nimport { PipesModule } from '../ui/pipes/pipes.module';\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignUpComponent],\n  imports: [CommonModule, AuthRouting, ReactiveFormsModule, PipesModule],\n})\nexport class AuthModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { validateForm } from '../../shared/directives/validate-form.directive';\nimport { AuthState } from 'src/app/store/auth/auth.state';\nimport { Store } from '@ngrx/store';\nimport {\n  login,\n  loginSuccess,\n  loginFailed,\n} from 'src/app/store/auth/auth.actions';\nimport { takeUntil } from 'rxjs/operators';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { RootState } from 'src/app/store/root.state';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  loginForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  });\n\n  loginFailed = false;\n\n  destroyed$ = new Subject<boolean>();\n\n  refUrl: string;\n\n  get email(): AbstractControl {\n    return this.loginForm.get('email');\n  }\n\n  get password(): AbstractControl {\n    return this.loginForm.get('password');\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store<RootState>,\n    private actions$: Actions\n  ) {\n    this.route.queryParamMap.subscribe((paramMap) => {\n      this.refUrl = paramMap.get('ref');\n    });\n  }\n\n  ngOnInit() {\n    this.actions$\n      .pipe(ofType(loginSuccess.type), takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.router.navigate([this.refUrl || '/']);\n      });\n\n    this.actions$\n      .pipe(ofType(loginFailed.type), takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.loginFailed = true;\n      });\n  }\n\n  submit() {\n    if (this.loginForm.valid) {\n      this.store.dispatch(\n        login({\n          payload: {\n            email: this.email.value,\n            password: this.password.value,\n          },\n        })\n      );\n    } else {\n      validateForm(this.loginForm);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"container\">\n  <div class=\"loginForm\">\n    <h2 class=\"loginForm--title\">IMDb Clone</h2>\n    <form\n      class=\"elevation-1 loginForm--form\"\n      [formGroup]=\"loginForm\"\n      (ngSubmit)=\"submit()\"\n    >\n      <h2 class=\"loginForm--form-title\">Sign In</h2>\n      <div class=\"input\">\n        <label for=\"email\">\n          Email\n          <input type=\"email\" formControlName=\"email\" />\n        </label>\n        <div\n          class=\"input--error\"\n          *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n        >\n          This is not a valid email\n        </div>\n      </div>\n      <div class=\"input\">\n        <label for=\"password\">\n          Password\n          <input type=\"password\" formControlName=\"password\" />\n          <div\n            class=\"input--error\"\n            *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n          >\n            Password must be at least 6 characters long\n          </div>\n        </label>\n      </div>\n      <button class=\"button button__secondary\">Sign In</button>\n      <div\n        class=\"alert alert__danger loginForm--form-alert\"\n        *ngIf=\"loginFailed\"\n      >\n        Wrong email or password\n      </div>\n    </form>\n    <div class=\"login--signUp\">\n      Don't have an account?\n      <a routerLink=\"/auth/signUp\" queryParamsHandling=\"merge\">Sign Up</a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { confirmPasswordValidator } from '../../shared/directives/confirm-password.directive';\nimport { validateForm } from '../../shared/directives/validate-form.directive';\nimport { AuthService } from '../../shared/services/auth/auth.service';\nimport { Subscription, Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AuthState } from 'src/app/store/auth/auth.state';\nimport { Actions, ofType } from '@ngrx/effects';\nimport {\n  signUpSuccess,\n  signUpFailed,\n  signUp,\n} from 'src/app/store/auth/auth.actions';\nimport { takeUntil } from 'rxjs/operators';\nimport { RootState } from 'src/app/store/root.state';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit, OnDestroy {\n  signUpForm = new FormGroup(\n    {\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(6),\n      ]),\n    },\n    {\n      validators: confirmPasswordValidator,\n    }\n  );\n\n  signUpResult: Subscription;\n\n  signUpFailed = false;\n\n  destroyed$ = new Subject<boolean>();\n\n  get email() {\n    return this.signUpForm.get('email');\n  }\n\n  get password() {\n    return this.signUpForm.get('password');\n  }\n\n  get confirmPassword() {\n    return this.signUpForm.get('confirmPassword');\n  }\n\n  constructor(\n    private router: Router,\n    private store: Store<RootState>,\n    private actions$: Actions,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.actions$\n      .pipe(ofType(signUpSuccess), takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.router.navigate(['/']);\n      });\n\n    this.actions$\n      .pipe(ofType(signUpFailed.type), takeUntil(this.destroyed$))\n      .subscribe(() => {\n        this.signUpFailed = true;\n      });\n  }\n\n  submit() {\n    if (this.signUpForm.valid) {\n      this.store.dispatch(\n        signUp({\n          payload: {\n            email: this.email.value,\n            password: this.password.value,\n          },\n        })\n      );\n    } else {\n      validateForm(this.signUpForm);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"container\">\n  <div class=\"loginForm\">\n    <h2 class=\"loginForm--title\">IMDb Clone</h2>\n    <form\n      class=\"elevation-1 loginForm--form\"\n      [formGroup]=\"signUpForm\"\n      (ngSubmit)=\"submit()\"\n    >\n      <h2 class=\"loginForm--form-title\">Sign Up</h2>\n      <div class=\"input\">\n        <label for=\"email\">\n          Email\n          <input type=\"email\" formControlName=\"email\" />\n        </label>\n        <div\n          class=\"input--error\"\n          *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n        >\n          This is not a valid email\n        </div>\n      </div>\n      <div class=\"input\">\n        <label for=\"password\">\n          Password\n          <input type=\"password\" formControlName=\"password\" />\n          <div\n            class=\"input--error\"\n            *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n          >\n            Password must be at least 6 characters long\n          </div>\n        </label>\n      </div>\n      <div class=\"input\">\n        <label for=\"password\">\n          Cofirm Password\n          <input type=\"password\" formControlName=\"confirmPassword\" />\n          <div\n            class=\"input--error\"\n            *ngIf=\"\n              confirmPassword.invalid &&\n              (confirmPassword.dirty || confirmPassword.touched)\n            \"\n          >\n            Password must be at least 6 characters long\n          </div>\n          <div\n            class=\"input--error\"\n            *ngIf=\"\n              signUpForm.errors?.passwordsNoMatch &&\n              (signUpForm.touched || signUpForm.dirty)\n            \"\n          >\n            Passwords don't match\n          </div>\n        </label>\n      </div>\n      <button class=\"button button__secondary\">Sign Up</button>\n      <div\n        class=\"alert alert__danger loginForm--form-alert\"\n        *ngIf=\"signUpFailed\"\n      >\n        Unexpected error during registration\n      </div>\n    </form>\n    <div class=\"signUp--signIn\">\n      Already have an account?\n      <a routerLink=\"/auth/signIn\" queryParamsHandling=\"merge\">Sign In</a>\n    </div>\n  </div>\n</div>\n","import { ValidatorFn, FormGroup, ValidationErrors } from '@angular/forms';\n\nexport const confirmPasswordValidator: ValidatorFn = (\n  control: FormGroup\n): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n\n  return password && confirmPassword && password.value !== confirmPassword.value\n    ? { passwordsNoMatch: true }\n    : null;\n};\n","import { FormGroup, FormControl } from '@angular/forms';\n\nexport const validateForm = (formGroup: FormGroup) => {\n  Object.keys(formGroup.controls).forEach((field) => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched({ onlySelf: true });\n    } else if (control instanceof FormGroup) {\n      this.validateAllFormFields(control);\n    }\n  });\n};\n","import { authUrl } from 'src/app/config';\n\nexport const login = authUrl + 'accounts:signInWithPassword';\nexport const signUp = authUrl + 'accounts:signUp';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { RootState } from 'src/app/store/root.state';\nimport { Store, select } from '@ngrx/store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggedGuard implements CanActivate {\n  constructor(private store: Store<RootState>, public router: Router) {}\n\n  canActivate(): Observable<boolean> {\n    const loggedIn$ = this.store.pipe(\n      select((state) => state.auth.loggedIn),\n      take(1)\n    );\n    loggedIn$.subscribe((loggedIn) => {\n      if (!loggedIn) {\n        this.router.navigate(['/auth/signIn']);\n      }\n    });\n    return loggedIn$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RootState } from 'src/app/store/root.state';\nimport { Store, select } from '@ngrx/store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotLoggedGuard implements CanActivate {\n  constructor(private store: Store<RootState>) {}\n\n  canActivate(): Observable<boolean> {\n    return this.store.pipe(\n      select((state) => state.auth.loggedIn),\n      map((data) => !data)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RequestService } from 'src/app/ui/services/request/request.service';\nimport { HttpParams } from '@angular/common/http';\nimport { authKey } from 'src/app/config';\nimport { login, signUp } from '../../endpoints';\nimport {\n  LoginSuccessfulResult,\n  LoginFailedResult,\n} from '../../types/loginResult';\nimport { LoggedUser } from '../../types/loggedUser';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { share, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  loggedUser: BehaviorSubject<LoggedUser> = new BehaviorSubject({\n    email: '',\n    logged: false,\n  });\n\n  constructor(private request: RequestService) {}\n\n  login(email: string, password: string): Observable<LoginSuccessfulResult> {\n    const request$ = this.request\n      .post<\n        LoginSuccessfulResult,\n        {\n          email: string;\n          password: string;\n        }\n      >(\n        login,\n        {\n          email,\n          password,\n        },\n        {\n          key: authKey,\n        }\n      )\n      .pipe(share());\n\n    request$.pipe(take(1)).subscribe(() => {\n      this.loggedUser.next({\n        logged: true,\n        email,\n      });\n    });\n\n    return request$;\n  }\n\n  logout(): void {\n    this.loggedUser.next({\n      logged: false,\n      email: '',\n    });\n  }\n\n  signUp(email: string, password: string) {\n    const request$ = this.request\n      .post<\n        LoginSuccessfulResult,\n        {\n          email: string;\n          password: string;\n        }\n      >(\n        signUp,\n        {\n          email,\n          password,\n        },\n        {\n          key: authKey,\n        }\n      )\n      .pipe(share());\n\n    request$.pipe(take(1)).subscribe(() => {\n      this.loggedUser.next({\n        logged: true,\n        email,\n      });\n    });\n\n    return request$;\n  }\n}\n","export const apiUrl = 'https://api.themoviedb.org/3';\nexport const apiKey = '519e9b151c1dc701bf50e6824fbe3409';\n\nexport const authUrl = 'https://identitytoolkit.googleapis.com/v1/';\nexport const authKey = 'AIzaSyD15XONBwSn_kgvyJ7OE46Zt_CZ7_Yl6nM';\n\nexport const dataUrl = 'https://practce-on-focus.firebaseio.com';\nexport const dataKey = authKey;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoggedGuard } from '../auth/shared/guards/logged/logged.guard';\nimport { FavouritesComponent } from './pages/favourites/favourites.component';\n\nconst routes: Routes = [\n  {\n    path: 'all',\n    component: FavouritesComponent,\n    canActivate: [LoggedGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FavouritesRouting {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PipesModule } from '../ui/pipes/pipes.module';\nimport { FavouritesComponent } from './pages/favourites/favourites.component';\nimport { FavouritesRouting } from './favourites-routing.module';\nimport { MovieCardModule } from '../ui/components/movie-card/movie-card.module';\n\n@NgModule({\n  declarations: [FavouritesComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PipesModule,\n    FavouritesRouting,\n    MovieCardModule,\n  ],\n})\nexport class FavouritesModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { FavouritesState } from 'src/app/store/favourites/favourites.state';\nimport { Subject, Observable } from 'rxjs';\nimport { Movie } from 'src/app/movies/shared/types/movie';\nimport { getFavourites } from 'src/app/store/favourites/favourites.actions';\nimport { RootState } from 'src/app/store/root.state';\n\n@Component({\n  selector: 'app-favourites',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.scss'],\n})\nexport class FavouritesComponent implements OnInit, OnDestroy {\n  destroyed$ = new Subject<boolean>();\n\n  favourites$: Observable<Movie[]>;\n\n  constructor(private store: Store<RootState>) {}\n\n  ngOnInit() {\n    this.favourites$ = this.store.pipe(\n      select((state) =>\n        state.favourites.favourites\n          ? Object.values(state.favourites.favourites)\n          : []\n      )\n    );\n    this.store.dispatch(getFavourites());\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(false);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"favourites movieGrid\">\n  <div class=\"container\">\n    <h3 class=\"home--title title\">Favourites</h3>\n    <div *ngIf=\"favourites$ | async as favourites\" class=\"movieGrid--row\">\n      <div class=\"col\" *ngFor=\"let movie of favourites\">\n        <app-movie-card [movie]=\"movie\"></app-movie-card>\n      </div>\n      <i *ngIf=\"favourites.length === 0\" class=\"gray\">No Favourites</i>\n    </div>\n  </div>\n</div>\n","import { dataUrl } from 'src/app/config';\n\nexport const favourites = (localId: string) =>\n  `${dataUrl}/favorites/${localId}.json`;\n\nexport const putFavourite = (localId: string, movieId: number) =>\n  `${dataUrl}/favorites/${localId}/${movieId}.json`;\n","import { Injectable } from '@angular/core';\nimport { RequestService } from 'src/app/ui/services/request/request.service';\nimport { Movie } from 'src/app/movies/shared/types/movie';\nimport { Observable } from 'rxjs';\nimport { dataKey } from 'src/app/config';\nimport { favourites, putFavourite } from '../../endpoints';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FavouriteService {\n  constructor(private request: RequestService) {}\n\n  getAll(\n    localId: string\n  ): Observable<{\n    [key: number]: Movie;\n  }> {\n    return this.request.get<{\n      [key: number]: Movie;\n    } | null>(favourites(localId), {\n      key: dataKey,\n    });\n  }\n\n  addMovieToFavourites(localId: string, movie: Movie): Observable<never> {\n    return this.request.put(putFavourite(localId, movie.id), movie, {\n      key: dataKey,\n    });\n  }\n\n  removeMovieFromFavourites(\n    localId: string,\n    movieId: number\n  ): Observable<never> {\n    return this.request.delete(putFavourite(localId, movieId), {\n      key: dataKey,\n    });\n  }\n\n  addPersonalNoteToFavourite(\n    localId: string,\n    movieId: number,\n    personalNote: string\n  ): Observable<never> {\n    return this.request.patch(\n      putFavourite(localId, movieId),\n      {\n        personalNote,\n      },\n      {\n        key: dataKey,\n      }\n    );\n  }\n}\n","import { apiUrl } from 'src/app/config';\n\nexport const genres = apiUrl + '/genre/movie/list';\n","import { Injectable } from '@angular/core';\nimport { RequestService } from 'src/app/ui/services/request/request.service';\nimport { Genre } from 'src/app/movies/shared/types/movieOverview';\nimport { genres } from '../../endpoints';\nimport {\n  map,\n  flatMap,\n  filter,\n  take,\n  shareReplay,\n  toArray,\n} from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { apiKey } from 'src/app/config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenreService {\n  genres$: Observable<Genre[]>;\n\n  constructor(private request: RequestService) {}\n\n  getGenres() {\n    if (!this.genres$) {\n      this.genres$ = this.request\n        .get<{\n          genres: Genre[];\n        }>(genres, {\n          api_key: apiKey,\n        })\n        .pipe(\n          map((data) => data.genres),\n          shareReplay(1)\n        );\n    }\n\n    return this.genres$;\n  }\n\n  getGenreById(id: number) {\n    return this.getGenres().pipe(\n      flatMap((genre) => genre),\n      filter((genre) => genre.id === id),\n      take(1)\n    );\n  }\n\n  getGenresByIds(ids: number[]) {\n    return this.getGenres().pipe(\n      flatMap((genre) => genre),\n      filter((genre) => ids.includes(genre.id)),\n      toArray()\n    );\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { MovieCastMember } from '../../shared/types/movieCastMember';\nimport { PosterSize } from '../../shared/types/movie';\n\n@Component({\n  selector: 'app-movie-cast-member-image',\n  templateUrl: './movie-cast-member-image.component.html',\n  styleUrls: ['./movie-cast-member-image.component.scss'],\n})\nexport class MovieCastMemberImageComponent {\n  @Input() castMember: MovieCastMember;\n  @Input() size: PosterSize = 'w154';\n  @Input() width: string;\n}\n","<div class=\"movieCastMemberImage\" [style.width]=\"width\">\n  <app-image\n    *ngIf=\"castMember.profile_path; else noImage\"\n    [path]=\"castMember.profile_path\"\n    [posterSize]=\"size\"\n    [aspectRatio]=\"3 / 2\"\n  ></app-image>\n  <ng-template #noImage>\n    <div class=\"movieCastMemberImage--image\">\n      <div class=\"movieCastMemberImage--image-svg\">\n        <div\n          *ngIf=\"castMember.gender === 2; else female\"\n          [inlineSVG]=\"'/assets/userMaleGray.svg'\"\n        ></div>\n        <ng-template #female>\n          <div [inlineSVG]=\"'/assets/userFemaleGray.svg'\"></div>\n        </ng-template>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MovieCastMember } from '../../shared/types/movieCastMember';\nimport { Observable } from 'rxjs';\nimport { MovieService } from '../../shared/services/movie/movie.service';\nimport { flatMap, take, toArray } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-movie-cast',\n  templateUrl: './movie-cast.component.html',\n  styleUrls: ['./movie-cast.component.scss'],\n})\nexport class MovieCastComponent implements OnInit {\n  fullCast$: Observable<MovieCastMember[]>;\n  cast$: Observable<MovieCastMember[]>;\n\n  @Input() movieId: number;\n  @Input() showMembersCount = 10;\n\n  constructor(private movieService: MovieService) {}\n\n  ngOnInit(): void {\n    this.fullCast$ = this.movieService.getCast(this.movieId);\n    this.cast$ = this.fullCast$.pipe(\n      flatMap((member) => member),\n      take(this.showMembersCount),\n      toArray()\n    );\n  }\n}\n","<div class=\"movieCast\">\n  <div class=\"movieCast--row\">\n    <div *ngFor=\"let castMember of cast$ | async\" class=\"movieCast--row-member\">\n      <app-movie-cast-member-image\n        [castMember]=\"castMember\"\n      ></app-movie-cast-member-image>\n      <div class=\"bold truncate\">{{ castMember.name }}</div>\n      <div class=\"gray\">{{ castMember.character }}</div>\n    </div>\n  </div>\n  <a routerLink=\"cast\" class=\"movieCast--fullCast\">\n    View Full Cast\n  </a>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { MovieOverview } from '../../shared/types/movieOverview';\n\n@Component({\n  selector: 'app-movie-go-back',\n  templateUrl: './movie-go-back.component.html',\n  styleUrls: ['./movie-go-back.component.scss'],\n})\nexport class MovieGoBackComponent {\n  @Input() movieOverview: MovieOverview;\n  @Input() text: string = 'Back to main';\n  @Input() link: string = '../';\n}\n","<div class=\"movieGoBack\">\n  <app-image\n    [path]=\"movieOverview.poster_path\"\n    [aspectRatio]=\"3 / 2\"\n    posterSize=\"w45\"\n  ></app-image>\n  <div>\n    <app-movie-title [movieOverview]=\"movieOverview\"></app-movie-title>\n    <a [routerLink]=\"link\">{{ text }}</a>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Movie } from '../../shared/types/movie';\nimport { MovieOverview } from '../../shared/types/movieOverview';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { RootState } from 'src/app/store/root.state';\nimport { take } from 'rxjs/operators';\nimport {\n  addMovieToFavourites,\n  removeMovieFromFavourites,\n} from 'src/app/store/favourites/favourites.actions';\nimport { Favourite } from 'src/app/favourites/shared/types/favourite';\n\n@Component({\n  selector: 'app-movie-info',\n  templateUrl: './movie-info.component.html',\n  styleUrls: ['./movie-info.component.scss'],\n})\nexport class MovieInfoComponent implements OnInit {\n  @Input() movieOverview: MovieOverview;\n\n  loggedIn$: Observable<boolean>;\n  favourite$: Observable<boolean>;\n\n  constructor(private router: Router, private store: Store<RootState>) {}\n\n  ngOnInit() {\n    this.loggedIn$ = this.store.pipe(select((state) => state.auth.loggedIn));\n    this.favourite$ = this.store.pipe(\n      select(\n        (state) =>\n          state.favourites.favourites &&\n          state.favourites.favourites[this.movieOverview.id] !== undefined\n      )\n    );\n  }\n\n  favourite() {\n    this.loggedIn$.pipe(take(1)).subscribe((loggedIn) => {\n      if (loggedIn) {\n        this.store.dispatch(\n          addMovieToFavourites({\n            payload: {\n              movie: this.getMovieObject,\n            },\n          })\n        );\n      } else {\n        this.router.navigate(['/auth/signIn'], {\n          queryParams: {\n            ref: this.router.url,\n          },\n        });\n      }\n    });\n  }\n\n  unfavourite() {\n    this.store.dispatch(\n      removeMovieFromFavourites({\n        payload: {\n          movieId: this.movieOverview.id,\n        },\n      })\n    );\n  }\n\n  private get getMovieObject(): Favourite {\n    return {\n      ...this.movieOverview,\n      genre_ids: this.movieOverview.genres.map((genre) => genre.id),\n      personalNote: '',\n    };\n  }\n}\n","<div class=\"movieInfo\">\n  <app-movie-title [movieOverview]=\"movieOverview\"></app-movie-title>\n  <div class=\"movieInfo--subtitle\">\n    <div *ngIf=\"movieOverview.runtime\">\n      {{ movieOverview.runtime | duration }}\n    </div>\n    <div>\n      <span>{{ movieOverview.genres | genres }}</span>\n    </div>\n  </div>\n  <div class=\"movieInfo--tagline\">\n    <i>{{ movieOverview.tagline }}</i>\n  </div>\n  <div class=\"movieInfo--description\">\n    <div class=\"movieInfo--description-title bold\">Overview</div>\n    <div class=\"movieInfo--description-readMore\">\n      <app-read-more\n        [content]=\"movieOverview.overview\"\n        [length]=\"150\"\n      ></app-read-more>\n    </div>\n    <div class=\"movieInfo--description-text\">{{ movieOverview.overview }}</div>\n  </div>\n  <div class=\"movieInfo--bottomRow\">\n    <div class=\"movieInfo--rating\" *ngIf=\"movieOverview.vote_count > 0\">\n      <app-movie-rating\n        [rating]=\"movieOverview.vote_average\"\n        [styles]=\"{\n          high: 'movieInfo--rating-high',\n          normal: 'movieInfo--rating-normal',\n          low: 'movieInfo--rating-low'\n        }\"\n        suffix=\"\"\n      ></app-movie-rating>\n      User Score\n    </div>\n    <div class=\"movieInfo--favourite\">\n      <button\n        *ngIf=\"favourite$ | async; else alreadyFavourited\"\n        class=\"button button__secondary\"\n        (click)=\"unfavourite()\"\n      >\n        <span class=\"material-icons\">favorite</span>\n        Remove From Favourites\n      </button>\n      <ng-template #alreadyFavourited>\n        <button class=\"button button__secondary\" (click)=\"favourite()\">\n          <span class=\"material-icons\">favorite_border</span>\n          Add To Favourites\n        </button>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { RootState } from 'src/app/store/root.state';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { MovieOverview } from '../../shared/types/movieOverview';\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport { addPersonalNoteToFavourite } from 'src/app/store/favourites/favourites.actions';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-movie-personal-note',\n  templateUrl: './movie-personal-note.component.html',\n  styleUrls: ['./movie-personal-note.component.scss'],\n})\nexport class MoviePersonalNoteComponent implements OnInit {\n  @Input() movieOverview: MovieOverview;\n\n  personalNoteForm = new FormGroup({\n    note: new FormControl(''),\n  });\n\n  get note(): AbstractControl {\n    return this.personalNoteForm.get('note');\n  }\n\n  constructor(private store: Store<RootState>) {}\n\n  ngOnInit() {\n    this.store\n      .pipe(\n        select((state) => state.favourites.favourites[this.movieOverview.id]),\n        take(1)\n      )\n      .subscribe((movie) => {\n        this.note.setValue(movie.personalNote);\n      });\n  }\n\n  submit() {\n    this.store.dispatch(\n      addPersonalNoteToFavourite({\n        payload: {\n          movieId: this.movieOverview.id,\n          personalNote: this.note.value,\n        },\n      })\n    );\n  }\n}\n","<div class=\"moviePersonalNote\">\n  <form [formGroup]=\"personalNoteForm\" (ngSubmit)=\"submit()\">\n    <div class=\"textarea\">\n      <textarea\n        formControlName=\"note\"\n        class=\"elevation-1\"\n        placeholder=\"Write anything you would like about this movie\"\n      ></textarea>\n    </div>\n    <button class=\"button button__secondary\">Save</button>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Movie } from '../../shared/types/movie';\nimport { MovieService } from '../../shared/services/movie/movie.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-movie-recommendations',\n  templateUrl: './movie-recommendations.component.html',\n  styleUrls: ['./movie-recommendations.component.scss'],\n})\nexport class MovieRecommendationsComponent implements OnInit {\n  recommendations$: Observable<Movie[]>;\n\n  @Input() movieId: number;\n\n  constructor(private movieService: MovieService) {}\n\n  ngOnInit(): void {\n    this.recommendations$ = this.movieService.getRecommendations(this.movieId);\n  }\n}\n","<div class=\"movieRecommendations\">\n  <div\n    *ngFor=\"let movie of recommendations$ | async\"\n    class=\"movieRecommendations--movie\"\n  >\n    <app-movie-card [movie]=\"movie\"></app-movie-card>\n  </div>\n  <i\n    *ngIf=\"(recommendations$ | async)?.length === 0\"\n    class=\"gray movieRecommendations--noRecommendation\"\n  >\n    No Recommendations\n  </i>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { MovieReview } from '../../shared/types/movieReview';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-movie-review',\n  templateUrl: './movie-review.component.html',\n  styleUrls: ['./movie-review.component.scss'],\n})\nexport class MovieReviewComponent {\n  @Input() review: MovieReview;\n  @Input() length: number = 150;\n\n  id: number;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.id = parseInt(paramMap.get('id'));\n    });\n  }\n\n  readMoreClicked() {\n    this.router.navigate(['/movies', this.id, 'reviews', this.review.id], {\n      queryParams: {\n        ref: this.router.url,\n      },\n    });\n  }\n}\n","<article class=\"movieReview\">\n  <div class=\"movieReview--author bold\">{{ review.author }}</div>\n  <div>\n    <app-read-more\n      [content]=\"review.content | markdown\"\n      [length]=\"length\"\n      (readMore)=\"readMoreClicked()\"\n    ></app-read-more>\n  </div>\n</article>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MovieReview } from '../../shared/types/movieReview';\nimport { MovieService } from '../../shared/services/movie/movie.service';\nimport { Observable } from 'rxjs';\nimport { flatMap, take, toArray } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-movie-reviews',\n  templateUrl: './movie-reviews.component.html',\n  styleUrls: ['./movie-reviews.component.scss'],\n})\nexport class MovieReviewsComponent implements OnInit {\n  reviews$: Observable<MovieReview[]>;\n  allReviews$: Observable<MovieReview[]>;\n\n  @Input() movieId: number;\n  @Input() showReviewsCount = 3;\n\n  constructor(private movieService: MovieService) {}\n\n  ngOnInit(): void {\n    this.allReviews$ = this.movieService.getReviews(this.movieId);\n    this.reviews$ = this.allReviews$.pipe(\n      flatMap((review) => review),\n      take(this.showReviewsCount),\n      toArray()\n    );\n  }\n}\n","<div class=\"movieReviews\" *ngIf=\"reviews$ | async as reviews\">\n  <div class=\"movieReviews--row\">\n    <div *ngFor=\"let review of reviews\" class=\"movieReviews--review\">\n      <app-movie-review [review]=\"review\"></app-movie-review>\n    </div>\n  </div>\n  <a\n    *ngIf=\"(allReviews$ | async)?.length > showReviewsCount\"\n    routerLink=\"reviews\"\n    class=\"movieReviews--more\"\n    >View All Reviews</a\n  >\n  <i *ngIf=\"reviews.length === 0\" class=\"gray\">No Reviews</i>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Movie } from '../../shared/types/movie';\nimport { MovieOverview } from '../../shared/types/movieOverview';\n\n@Component({\n  selector: 'app-movie-title',\n  templateUrl: './movie-title.component.html',\n  styleUrls: ['./movie-title.component.scss'],\n})\nexport class MovieTitleComponent {\n  @Input() movieOverview: MovieOverview;\n}\n","<div class=\"movieTitle\">\n  <span class=\"bold\">{{ movieOverview.title }}</span>\n  <span class=\"movieTitle--year\"\n    >({{ movieOverview.release_date | date: \"yyyy\" }})</span\n  >\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MovieDetailsComponent } from './pages/movie-details/movie-details.component';\nimport { MovieFullCastComponent } from './pages/movie-full-cast/movie-full-cast.component';\nimport { MovieAllReviewsComponent } from './pages/movie-all-reviews/movie-all-reviews.component';\nimport { MovieFullReviewComponent } from './pages/movie-full-review/movie-full-review.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: ':id', component: HomeComponent },\n  { path: 'movies/:id', component: MovieDetailsComponent },\n  { path: 'movies/:id/cast', component: MovieFullCastComponent },\n  { path: 'movies/:id/reviews', component: MovieAllReviewsComponent },\n  { path: 'movies/:id/reviews/:reviewId', component: MovieFullReviewComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MoviesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './pages/home/home.component';\nimport { PipesModule } from '../ui/pipes/pipes.module';\nimport { MoviesRoutingModule } from './movies-routing.module';\nimport { MovieDetailsComponent } from './pages/movie-details/movie-details.component';\nimport { ReadMoreModule } from '../ui/components/read-more/read-more.module';\nimport { MovieCastComponent } from './components/movie-cast/movie-cast.component';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { MovieReviewsComponent } from './components/movie-reviews/movie-reviews.component';\nimport { MovieRecommendationsComponent } from './components/movie-recommendations/movie-recommendations.component';\nimport { MovieInfoComponent } from './components/movie-info/movie-info.component';\nimport { MovieFullCastComponent } from './pages/movie-full-cast/movie-full-cast.component';\nimport { MovieCastMemberImageComponent } from './components/movie-cast-member-image/movie-cast-member-image.component';\nimport { MovieTitleComponent } from './components/movie-title/movie-title.component';\nimport { MovieAllReviewsComponent } from './pages/movie-all-reviews/movie-all-reviews.component';\nimport { MovieGoBackComponent } from './components/movie-go-back/movie-go-back.component';\nimport { MovieReviewComponent } from './components/movie-review/movie-review.component';\nimport { MovieFullReviewComponent } from './pages/movie-full-review/movie-full-review.component';\nimport { ImageModule } from '../ui/components/image/image.module';\nimport { StoreModule } from '@ngrx/store';\nimport { moviesReducer } from '../store/movies/movies.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MovieEffects } from '../store/movies/movies.effects';\nimport { MovieCardModule } from '../ui/components/movie-card/movie-card.module';\nimport { MoviePersonalNoteComponent } from './components/movie-personal-note/movie-personal-note.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    MovieDetailsComponent,\n    MovieCastComponent,\n    MovieReviewsComponent,\n    MovieRecommendationsComponent,\n    MovieInfoComponent,\n    MovieFullCastComponent,\n    MovieCastMemberImageComponent,\n    MovieTitleComponent,\n    MovieAllReviewsComponent,\n    MovieGoBackComponent,\n    MovieReviewComponent,\n    MovieFullReviewComponent,\n    MoviePersonalNoteComponent,\n  ],\n  imports: [\n    CommonModule,\n    MoviesRoutingModule,\n    PipesModule,\n    ReadMoreModule,\n    InlineSVGModule,\n    ImageModule,\n    StoreModule.forFeature('movies', moviesReducer),\n    EffectsModule.forFeature([MovieEffects]),\n    MovieCardModule,\n    ReactiveFormsModule,\n  ],\n  bootstrap: [HomeComponent],\n})\nexport class MoviesModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Movie } from '../../shared/types/movie';\nimport { MovieService } from '../../shared/services/movie/movie.service';\nimport { Subscription, Observable } from 'rxjs';\nimport { take } from 'rxjs/internal/operators/take';\nimport { Store, select } from '@ngrx/store';\nimport { MoviesState } from 'src/app/store/movies/movies.state';\nimport { nextPage } from 'src/app/store/movies/movies.actions';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  movies$: Observable<Movie[]>;\n\n  pageId: number = 0;\n\n  moviesResult: Subscription;\n\n  constructor(\n    private movieService: MovieService,\n    private store: Store<{ movies: MoviesState }>\n  ) {}\n\n  ngOnInit() {\n    this.movies$ = this.store.pipe(\n      select((state) => state.movies.popularMovies)\n    );\n    this.store\n      .pipe(\n        select((state) => state.movies.currentPage),\n        take(1)\n      )\n      .subscribe((page) => {\n        if (page === 1) {\n          this.loadMore();\n        }\n      });\n  }\n\n  loadMore() {\n    this.store.dispatch(nextPage());\n  }\n}\n","<div class=\"home movieGrid\">\n  <div class=\"container\">\n    <h3 class=\"title\">Movies</h3>\n    <div class=\"movieGrid--row\">\n      <div class=\"col\" *ngFor=\"let movie of movies$ | async\">\n        <app-movie-card [movie]=\"movie\"></app-movie-card>\n      </div>\n    </div>\n    <a (click)=\"loadMore()\">Load More</a>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Movie } from '../../shared/types/movie';\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieReview } from '../../shared/types/movieReview';\nimport { Observable } from 'rxjs';\nimport { MovieOverview } from '../../shared/types/movieOverview';\nimport { MovieService } from '../../shared/services/movie/movie.service';\n\n@Component({\n  selector: 'app-movie-all-reviews',\n  templateUrl: './movie-all-reviews.component.html',\n  styleUrls: ['./movie-all-reviews.component.scss'],\n})\nexport class MovieAllReviewsComponent {\n  id: number;\n  movieOverview$: Observable<MovieOverview>;\n  reviews$: Observable<MovieReview[]>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private movieService: MovieService\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.id = parseInt(paramMap.get('id'));\n\n      this.reviews$ = this.movieService.getReviews(this.id);\n      this.movieOverview$ = this.movieService.getMovieDetails(this.id);\n    });\n  }\n}\n","<div class=\"container movieAllReviews\">\n  <app-movie-go-back\n    *ngIf=\"movieOverview$ | async as movieOverview\"\n    [movieOverview]=\"movieOverview\"\n  ></app-movie-go-back>\n  <h3 class=\"title\">Reviews</h3>\n  <div *ngFor=\"let review of reviews$ | async\" class=\"movieAllReviews--review\">\n    <app-movie-review [review]=\"review\" [length]=\"300\"></app-movie-review>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieOverview } from '../../shared/types/movieOverview';\nimport { Observable, Subject } from 'rxjs';\nimport { MovieService } from '../../shared/services/movie/movie.service';\nimport { Store, select } from '@ngrx/store';\nimport { MoviesState } from 'src/app/store/movies/movies.state';\nimport { RootState } from 'src/app/store/root.state';\nimport { take, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.scss'],\n})\nexport class MovieDetailsComponent implements OnDestroy {\n  id: number;\n  movieOverview$: Observable<MovieOverview>;\n\n  favourited$: Observable<boolean>;\n\n  destroyed$ = new Subject<boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private movieService: MovieService,\n    private store: Store<RootState>\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.id = parseInt(paramMap.get('id'));\n\n      this.movieOverview$ = movieService.getMovieDetails(this.id);\n\n      this.movieOverview$\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe((movieOverview) => {\n          this.favourited$ = this.store.pipe(\n            select(\n              (state) =>\n                state.favourites.favourites &&\n                state.favourites.favourites[movieOverview.id] !== undefined\n            )\n          );\n        });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","<div class=\"details\" *ngIf=\"movieOverview$ | async as movieOverview\">\n  <section class=\"details--image\">\n    <div class=\"details--image-backdrop\">\n      <div class=\"details--poster-xs\">\n        <app-image [path]=\"movieOverview.backdrop_path\"></app-image>\n      </div>\n      <div class=\"details--poster-sm\">\n        <app-image\n          [path]=\"movieOverview.backdrop_path\"\n          posterSize=\"w780\"\n          height=\"100%\"\n        ></app-image>\n      </div>\n      <div class=\"details--poster-md\">\n        <app-image\n          [path]=\"movieOverview.backdrop_path\"\n          posterSize=\"w780\"\n        ></app-image>\n      </div>\n      <div class=\"details--poster-lg\">\n        <app-image\n          [path]=\"movieOverview.backdrop_path\"\n          posterSize=\"w780\"\n          height=\"100%\"\n        ></app-image>\n      </div>\n      <div class=\"details--poster-xl\">\n        <app-image\n          [path]=\"movieOverview.backdrop_path\"\n          posterSize=\"w1280\"\n          width=\"1280px\"\n          height=\"100%\"\n        ></app-image>\n      </div>\n      <div class=\"details--poster-xxl\">\n        <app-image\n          [path]=\"movieOverview.backdrop_path\"\n          posterSize=\"w1280\"\n          width=\"1280px\"\n          height=\"100%\"\n        ></app-image>\n      </div>\n      <div class=\"details--image-backdrop-gradient\"></div>\n      <div\n        class=\"details--image-rating bold\"\n        *ngIf=\"movieOverview.vote_count > 0\"\n      >\n        <app-movie-rating\n          [rating]=\"movieOverview.vote_average\"\n          [styles]=\"{\n            high: 'details--image-rating-high',\n            normal: 'details--image-rating-normal',\n            low: 'details--image-rating-low'\n          }\"\n        ></app-movie-rating>\n      </div>\n    </div>\n    <div class=\"container details--image-container\">\n      <div class=\"details--image-poster\">\n        <app-image\n          [path]=\"movieOverview.poster_path\"\n          [aspectRatio]=\"3 / 2\"\n          class=\"details--poster-xs details--image-poster-image\"\n          posterSize=\"w92\"\n          width=\"92px\"\n        ></app-image>\n        <app-image\n          [path]=\"movieOverview.poster_path\"\n          [aspectRatio]=\"3 / 2\"\n          class=\"details--poster-sm details--image-poster-image\"\n          posterSize=\"w154\"\n          width=\"154px\"\n        ></app-image>\n        <app-image\n          [path]=\"movieOverview.poster_path\"\n          [aspectRatio]=\"3 / 2\"\n          class=\"details--poster-md details--image-poster-image\"\n          posterSize=\"w185\"\n          width=\"185px\"\n        ></app-image>\n        <app-image\n          [path]=\"movieOverview.poster_path\"\n          [aspectRatio]=\"3 / 2\"\n          class=\"details--poster-lg details--image-poster-image\"\n          posterSize=\"w185\"\n          width=\"185px\"\n        ></app-image>\n        <app-image\n          [path]=\"movieOverview.poster_path\"\n          [aspectRatio]=\"3 / 2\"\n          class=\"details--poster-xl details--image-poster-image\"\n          posterSize=\"w342\"\n          width=\"342px\"\n        ></app-image>\n        <app-image\n          [path]=\"movieOverview.poster_path\"\n          [aspectRatio]=\"3 / 2\"\n          class=\"details--poster-xxl details--image-poster-image\"\n          posterSize=\"w342\"\n          width=\"342px\"\n        ></app-image>\n      </div>\n      <div class=\"details--image-info\">\n        <app-movie-info [movieOverview]=\"movieOverview\"></app-movie-info>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"details--info\">\n    <app-movie-info [movieOverview]=\"movieOverview\"></app-movie-info>\n  </section>\n\n  <div class=\"container\">\n    <section>\n      <h3 class=\"details--title title\">Movie Cast</h3>\n      <app-movie-cast [movieId]=\"movieOverview.id\"></app-movie-cast>\n    </section>\n\n    <section class=\"details--details\">\n      <h3 class=\"title\">Details</h3>\n      <div class=\"\">\n        <div class=\"details--detail\">\n          <div class=\"bold\">Release Date</div>\n          <div class=\"details--details-value\">\n            {{ movieOverview.release_date | date: \"dd/MM/yyyy\" }}\n          </div>\n        </div>\n\n        <div class=\"details--detail\">\n          <div class=\"bold\">Homepage</div>\n          <div class=\"details--details-value\">\n            <a [href]=\"movieOverview.homepage\">{{ movieOverview.homepage }}</a>\n          </div>\n        </div>\n        <div class=\"details--detail\">\n          <div class=\"bold\">Budget</div>\n          <div class=\"details--details-value\">\n            ${{ movieOverview.budget | number }}\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section>\n      <h3 class=\"details--title title\">Reviews</h3>\n      <app-movie-reviews [movieId]=\"movieOverview.id\"></app-movie-reviews>\n    </section>\n\n    <section class=\"details--recommendations\">\n      <h3 class=\"title\">Recommendations</h3>\n      <app-movie-recommendations\n        [movieId]=\"movieOverview.id\"\n      ></app-movie-recommendations>\n    </section>\n\n    <section\n      id=\"personalNote\"\n      *ngIf=\"favourited$ | async\"\n      class=\"details--personalNote\"\n    >\n      <h3 class=\"title\">Personal Note</h3>\n      <app-movie-personal-note\n        [movieOverview]=\"movieOverview\"\n      ></app-movie-personal-note>\n    </section>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MovieCastMember } from '../../shared/types/movieCastMember';\nimport { Observable } from 'rxjs';\nimport { MovieService } from '../../shared/services/movie/movie.service';\nimport { MovieOverview } from '../../shared/types/movieOverview';\n\n@Component({\n  selector: 'app-movie-full-cast',\n  templateUrl: './movie-full-cast.component.html',\n  styleUrls: ['./movie-full-cast.component.scss'],\n})\nexport class MovieFullCastComponent {\n  id: number;\n  cast$: Observable<MovieCastMember[]>;\n  movieOverview$: Observable<MovieOverview>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private movieService: MovieService\n  ) {\n    this.route.paramMap.subscribe((paramMap) => {\n      this.id = parseInt(paramMap.get('id'));\n\n      this.cast$ = this.movieService.getCast(this.id);\n      this.movieOverview$ = this.movieService.getMovieDetails(this.id);\n    });\n  }\n}\n","<div class=\"container movieFullCast\">\n  <app-movie-go-back\n    *ngIf=\"movieOverview$ | async as movieOverview\"\n    [movieOverview]=\"movieOverview\"\n  ></app-movie-go-back>\n  <h3 class=\"title\">Cast</h3>\n  <div class=\"movieFullCast--row\">\n    <div class=\"movieFullCast--col\" *ngFor=\"let castMember of cast$ | async\">\n      <div class=\"movieFullCast--image\">\n        <app-movie-cast-member-image\n          [castMember]=\"castMember\"\n          size=\"w92\"\n          width=\"92px\"\n        ></app-movie-cast-member-image>\n      </div>\n      <div class=\"movieFullCast--col-info\">\n        <div class=\"bold\">{{ castMember.name }}</div>\n        <div class=\"gray\">{{ castMember.character }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { MovieReview } from '../../shared/types/movieReview';\nimport { Observable } from 'rxjs';\nimport { MovieOverview } from '../../shared/types/movieOverview';\nimport { MovieService } from '../../shared/services/movie/movie.service';\nimport { filter, flatMap, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-movie-full-review',\n  templateUrl: './movie-full-review.component.html',\n  styleUrls: ['./movie-full-review.component.scss'],\n})\nexport class MovieFullReviewComponent {\n  id: number;\n  reviewId: string;\n\n  review$: Observable<MovieReview>;\n  movieOverview$: Observable<MovieOverview>;\n\n  refUrl: string = '../';\n  refText: string = 'main';\n\n  constructor(\n    private route: ActivatedRoute,\n    private movieService: MovieService\n  ) {\n    this.route.queryParamMap.subscribe((paramMap) => {\n      this.refUrl = paramMap.get('ref');\n      const path = this.refUrl.split('/').pop();\n      if (path === 'reviews') {\n        this.refText = 'reviews';\n      }\n    });\n\n    this.route.paramMap.subscribe((paramMap) => {\n      this.id = parseInt(paramMap.get('id'));\n      this.reviewId = paramMap.get('reviewId');\n\n      this.movieOverview$ = this.movieService.getMovieDetails(this.id);\n      this.review$ = this.movieService.getReviews(this.id).pipe(\n        flatMap((review) => review),\n        filter((review) => review.id === this.reviewId),\n        take(1)\n      );\n    });\n  }\n}\n","<div class=\"container movieFullReview\">\n  <app-movie-go-back\n    *ngIf=\"movieOverview$ | async as movieOverview\"\n    [movieOverview]=\"movieOverview\"\n    [link]=\"refUrl\"\n    [text]=\"'Back to ' + refText\"\n  ></app-movie-go-back>\n  <div class=\"movieFullReview--review\">\n    <app-movie-review\n      *ngIf=\"review$ | async as review\"\n      [review]=\"review\"\n      [length]=\"-1\"\n    ></app-movie-review>\n  </div>\n</div>\n","import { apiUrl } from 'src/app/config';\n\nexport const moviePopular = apiUrl + '/movie/popular';\nexport const movieDetails = (movieId: number) => apiUrl + `/movie/${movieId}`;\nexport const movieCast = (movieId: number) =>\n  apiUrl + `/movie/${movieId}/credits`;\nexport const movieReviews = (movieId: number) =>\n  apiUrl + `/movie/${movieId}/reviews`;\nexport const movieRecommnedations = (movieId: number) =>\n  apiUrl + `/movie/${movieId}/recommendations`;\n","import { Injectable } from '@angular/core';\nimport { RequestService } from 'src/app/ui/services/request/request.service';\nimport {\n  moviePopular,\n  movieDetails,\n  movieCast,\n  movieReviews,\n  movieRecommnedations,\n} from '../../endpoints';\n\nimport { map } from 'rxjs/operators';\nimport { Movie } from '../../types/movie';\nimport { MovieOverview } from '../../types/movieOverview';\nimport { MovieCastMember } from '../../types/movieCastMember';\nimport { MovieReview } from '../../types/movieReview';\nimport { HttpParams } from '@angular/common/http';\nimport { apiKey } from 'src/app/config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MovieService {\n  constructor(private request: RequestService) {}\n\n  getPopularMovies(pageId: number = 1) {\n    return this.request\n      .get<{\n        results: Movie[];\n      }>(moviePopular, {\n        api_key: apiKey,\n        page: pageId.toString(),\n      })\n      .pipe(map((data) => data.results));\n  }\n\n  getMovieDetails(movieId: number) {\n    return this.request.get<MovieOverview>(movieDetails(movieId), {\n      api_key: apiKey,\n    });\n  }\n\n  getCast(movieId: number) {\n    return this.request\n      .get<{\n        cast: MovieCastMember[];\n      }>(movieCast(movieId), {\n        api_key: apiKey,\n      })\n      .pipe(map((data) => data.cast));\n  }\n\n  getReviews(movieId: number) {\n    return this.request\n      .get<{\n        results: MovieReview[];\n      }>(movieReviews(movieId), {\n        api_key: apiKey,\n      })\n      .pipe(map((data) => data.results));\n  }\n\n  getRecommendations(movieId: number) {\n    return this.request\n      .get<{\n        results: Movie[];\n      }>(movieRecommnedations(movieId), {\n        api_key: apiKey,\n      })\n      .pipe(map((data) => data.results));\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from 'src/app/auth/shared/services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Subscription, Subject, Observable } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport { RootState } from 'src/app/store/root.state';\nimport { logout } from 'src/app/store/auth/auth.actions';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n  opened = false;\n  loggedIn$: Observable<boolean>;\n\n  constructor(private store: Store<RootState>) {}\n\n  ngOnInit() {\n    this.loggedIn$ = this.store.pipe(select((state) => state.auth.loggedIn));\n  }\n\n  menuClicked() {\n    this.opened = !this.opened;\n  }\n\n  linkClicked() {\n    this.opened = false;\n  }\n\n  logout() {\n    this.store.dispatch(logout());\n  }\n}\n","<nav class=\"nav\">\n  <div class=\"container\">\n    <div class=\"nav--row\">\n      <button class=\"nav--menuBtn btn btn__blank\" (click)=\"menuClicked()\">\n        <span class=\"material-icons\">menu</span>\n      </button>\n\n      <a routerLink=\"/\" class=\"nav--logo bold\">IMDb Clone</a>\n\n      <ul [class.nav--menu__opened]=\"opened\">\n        <li (click)=\"linkClicked()\">\n          <a routerLink=\"/\">Home</a>\n        </li>\n        <li *ngIf=\"loggedIn$ | async\" (click)=\"linkClicked()\">\n          <a routerLink=\"favourites/all\">Favourites</a>\n        </li>\n      </ul>\n\n      <div class=\"nav--rightIcons\">\n        <button class=\"nav--loginBtn btn btn__blank\">\n          <a routerLink=\"auth/signIn\">\n            <span\n              *ngIf=\"!(loggedIn$ | async); else logged\"\n              class=\"material-icons\"\n            >\n              account_circle\n            </span>\n          </a>\n          <ng-template #logged>\n            <span (click)=\"logout()\" class=\"material-icons\">exit_to_app</span>\n          </ng-template>\n        </button>\n        <app-search class=\"nav--search\"></app-search>\n      </div>\n\n      <div *ngIf=\"!(loggedIn$ | async); else loggedLink\" class=\"nav--loginLink\">\n        <a routerLink=\"auth/signIn\">Sign In</a>\n      </div>\n      <ng-template #loggedLink>\n        <div class=\"nav--loginLink\" (click)=\"logout()\">\n          <a>Sign Out</a>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n","import { Component, Input } from '@angular/core';\nimport { SearchResult } from '../../shared/types/searchResult';\n\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls: ['./search-result.component.scss'],\n})\nexport class SearchResultComponent {\n  @Input() searchResult: SearchResult;\n}\n","<a [routerLink]=\"['movies', searchResult.id]\">\n  <div class=\"searchResult\">\n    <app-image\n      class=\"searchResult--image\"\n      [path]=\"searchResult.poster_path\"\n      posterSize=\"w92\"\n    ></app-image>\n    <div class=\"searchResult--info\">\n      <div>\n        {{ searchResult.title }}\n      </div>\n      <div class=\"searchResult--year\">\n        {{ searchResult.release_date | date: \"yyyy\" }}\n      </div>\n      <div class=\"searchResult--genres\">{{ searchResult.genres | genres }}</div>\n    </div>\n  </div>\n</a>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SearchService } from '../../shared/services/search/search.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { SearchResult } from '../../shared/types/searchResult';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnDestroy {\n  searchForm = new FormGroup({\n    query: new FormControl(''),\n  });\n\n  get query() {\n    return this.searchForm.get('query');\n  }\n\n  searchOpen = false;\n  searchResults: SearchResult[] = [];\n  searchResult: Subscription;\n\n  constructor(private searchService: SearchService) {\n    this.searchResult = this.searchService\n      .search(this.query.valueChanges)\n      .subscribe((searchResults) => {\n        this.searchResults = searchResults;\n        this.searchOpen = true;\n      });\n  }\n\n  closeSearch() {\n    this.searchOpen = false;\n  }\n\n  openSearch() {\n    this.searchOpen = true;\n  }\n\n  ngOnDestroy() {\n    this.searchResult.unsubscribe();\n  }\n}\n","<div class=\"search\">\n  <button class=\"search--button\">\n    <span class=\"material-icons\">search</span>\n  </button>\n  <form [formGroup]=\"searchForm\">\n    <input\n      type=\"text\"\n      formControlName=\"query\"\n      placeholder=\"Search IMDb Clone\"\n      (appClickOutside)=\"closeSearch()\"\n      (focus)=\"openSearch()\"\n    />\n    <button class=\"search--icon\">\n      <span class=\"material-icons\">search</span>\n    </button>\n  </form>\n  <div *ngIf=\"searchOpen\" class=\"search--results elevation-1\">\n    <app-search-result\n      class=\"search--result\"\n      *ngFor=\"let searchResult of searchResults | slice: 0:8\"\n      [searchResult]=\"searchResult\"\n    ></app-search-result>\n    <div\n      *ngIf=\"searchResults.length\"\n      class=\"search--result search--results-more\"\n    >\n      <a>See all results for \"{{ query.value }}\"</a>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { RouterModule } from '@angular/router';\nimport { SearchComponent } from './components/search/search.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SearchResultComponent } from './components/search-result/search-result.component';\nimport { ImageModule } from '../ui/components/image/image.module';\nimport { PipesModule } from '../ui/pipes/pipes.module';\nimport { DirectivesModule } from '../ui/directives/directives.module';\n\n@NgModule({\n  declarations: [NavigationComponent, SearchComponent, SearchResultComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    ImageModule,\n    PipesModule,\n    DirectivesModule,\n  ],\n  exports: [NavigationComponent],\n})\nexport class NavigationModule {}\n","import { apiUrl } from 'src/app/config';\n\nexport const search = apiUrl + '/search/movie';\n","import { Injectable } from '@angular/core';\nimport { RequestService } from 'src/app/ui/services/request/request.service';\nimport { Movie } from 'src/app/movies/shared/types/movie';\nimport { search } from '../../endpoints';\nimport {\n  map,\n  debounceTime,\n  distinctUntilChanged,\n  switchMap,\n  flatMap,\n} from 'rxjs/operators';\nimport { apiKey } from 'src/app/config';\nimport { Observable } from 'rxjs';\nimport { SearchResult } from '../../types/searchResult';\nimport { GenreService } from 'src/app/genres/shared/services/genre/genre.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  constructor(\n    private request: RequestService,\n    private genreService: GenreService\n  ) {}\n\n  search(query: Observable<string>) {\n    return query.pipe(\n      debounceTime(400),\n      distinctUntilChanged(),\n      switchMap((query) => this.searchRequest(query))\n    );\n  }\n\n  private searchRequest(query: string) {\n    return new Observable<SearchResult[]>((subscriber) => {\n      if (query.length > 0) {\n        const searchResult = this.request\n          .get<{\n            results: Movie[];\n          }>(search, {\n            api_key: apiKey,\n            query,\n          })\n          .pipe(map((data) => data.results))\n          .subscribe(async (movies) => {\n            const searchResults: SearchResult[] = [];\n\n            for (const movie of movies) {\n              searchResults.push({\n                id: movie.id,\n                title: movie.original_title,\n                release_date: movie.release_date,\n                poster_path: movie.poster_path,\n                genres: await this.genreService\n                  .getGenresByIds(movie.genre_ids)\n                  .toPromise(),\n              });\n            }\n\n            subscriber.next(searchResults);\n            searchResult.unsubscribe();\n          });\n      } else {\n        subscriber.next([]);\n      }\n    });\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { AuthState } from './auth.state';\n\nexport interface LoginPayload {\n  email: string;\n  password: string;\n}\n\nexport interface LoginSuccessPayload {\n  loggedUser: AuthState['loggedUser'];\n  loggedIn: boolean;\n}\n\nexport const login = createAction(\n  '[Auth] Login',\n  props<{\n    payload: LoginPayload;\n  }>()\n);\n\nexport const loginSuccess = createAction(\n  '[Auth] Login Success',\n  props<{\n    payload: LoginSuccessPayload;\n  }>()\n);\n\nexport const loginFailed = createAction('[Auth] Login Failed');\n\nexport const signUp = createAction(\n  '[Auth] Sign Up',\n  props<{\n    payload: LoginPayload;\n  }>()\n);\n\nexport const signUpSuccess = createAction(\n  '[Auth] Sign Up Success',\n  props<{\n    payload: {\n      loggedUser: AuthState['loggedUser'];\n      loggedIn: boolean;\n    };\n  }>()\n);\n\nexport const signUpFailed = createAction('[Auth] Sign Up Failed');\n\nexport const logout = createAction('[Auth] Logout');\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, exhaustMap, catchError, mergeMap } from 'rxjs/operators';\n\nimport {\n  login,\n  loginSuccess,\n  LoginPayload,\n  loginFailed,\n  signUp,\n  signUpSuccess,\n  signUpFailed,\n  LoginSuccessPayload,\n} from './auth.actions';\nimport { AuthService } from 'src/app/auth/shared/services/auth/auth.service';\nimport { of } from 'rxjs';\nimport { getFavourites } from '../favourites/favourites.actions';\n\n@Injectable()\nexport class AuthEffects {\n  login$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(login.type),\n      exhaustMap((action: { payload: LoginPayload }) =>\n        this.authService\n          .login(action.payload.email, action.payload.password)\n          .pipe(\n            map((loginResult) =>\n              loginSuccess({\n                payload: {\n                  loggedIn: true,\n                  loggedUser: {\n                    email: loginResult.email,\n                    localId: loginResult.localId,\n                  },\n                },\n              })\n            ),\n            catchError(() => of(loginFailed()))\n          )\n      )\n    )\n  );\n\n  signUp$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(signUp.type),\n      exhaustMap((action: { payload: LoginPayload }) =>\n        this.authService\n          .signUp(action.payload.email, action.payload.password)\n          .pipe(\n            map((loginResult) =>\n              loginSuccess({\n                payload: {\n                  loggedIn: true,\n                  loggedUser: {\n                    email: loginResult.email,\n                    localId: loginResult.localId,\n                  },\n                },\n              })\n            ),\n            catchError(() => of(signUpFailed()))\n          )\n      )\n    )\n  );\n\n  loginSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loginSuccess.type),\n      map((action: { payload: LoginSuccessPayload }) => getFavourites())\n    )\n  );\n\n  constructor(private actions$: Actions, private authService: AuthService) {}\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from './auth.state';\nimport { loginSuccess, signUpSuccess, logout } from './auth.actions';\n\nconst _authReducer = createReducer(\n  initialState,\n  on(loginSuccess, (state, { payload }) => ({\n    ...state,\n    loggedUser: payload.loggedUser,\n    loggedIn: payload.loggedIn,\n  })),\n  on(signUpSuccess, (state, { payload }) => ({\n    ...state,\n    loggedUser: payload.loggedUser,\n    loggedIn: payload.loggedIn,\n  })),\n  on(logout, (state) => ({\n    ...state,\n    loggedUser: null,\n    loggedIn: false,\n  }))\n);\n\nexport function authReducer(state, action) {\n  return _authReducer(state, action);\n}\n","export interface AuthState {\n  loggedIn: boolean;\n  loggedUser: {\n    email: string;\n    localId: string;\n  } | null;\n}\n\nexport const initialState: AuthState = {\n  loggedIn: false,\n  loggedUser: null,\n};\n","import { createAction, props } from '@ngrx/store';\nimport { Favourite } from 'src/app/favourites/shared/types/favourite';\n\nexport const getFavourites = createAction('[Favourites] Get Favourites');\nexport const getFavouritesSuccess = createAction(\n  '[Favourites] Get Favourites Success',\n  props<{\n    payload: {\n      favourites: Favourite[];\n    };\n  }>()\n);\n\nexport interface AddMovieToFavouritesPayload {\n  movie: Favourite;\n}\n\nexport const addMovieToFavourites = createAction(\n  '[Favourites] Add Movie To Favourites',\n  props<{\n    payload: AddMovieToFavouritesPayload;\n  }>()\n);\nexport const addMovieToFavouritesSuccess = createAction(\n  '[Favourites] Add Movie To Favourites Success',\n  props<{\n    payload: AddMovieToFavouritesPayload;\n  }>()\n);\n\nexport interface RemoveMovieFromFavouritesPayload {\n  movieId: number;\n}\n\nexport const removeMovieFromFavourites = createAction(\n  '[Favourites] Remove Movie From Favourites',\n  props<{\n    payload: RemoveMovieFromFavouritesPayload;\n  }>()\n);\nexport const removeMovieFromFavouritesSuccess = createAction(\n  '[Favourites] Remove Movie From Favourites Success',\n  props<{\n    payload: RemoveMovieFromFavouritesPayload;\n  }>()\n);\n\nexport interface AddPersonalNoteToFavouritePayload {\n  movieId: number;\n  personalNote: string;\n}\n\nexport const addPersonalNoteToFavourite = createAction(\n  '[Favourites] Add Personal Note To Favourite',\n  props<{\n    payload: AddPersonalNoteToFavouritePayload;\n  }>()\n);\n\nexport const addPersonalNoteToFavouriteSuccess = createAction(\n  '[Favourites] Add Personal Note To Favourite Success',\n  props<{\n    payload: AddPersonalNoteToFavouritePayload;\n  }>()\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType, Effect } from '@ngrx/effects';\nimport { mergeMap, map, concatMap, withLatestFrom, tap } from 'rxjs/operators';\nimport { Store, select, ActionCreator } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { FavouriteService } from 'src/app/favourites/shared/services/favourite/favourite.service';\nimport { RootState } from '../root.state';\nimport {\n  getFavourites,\n  getFavouritesSuccess,\n  addMovieToFavourites,\n  addMovieToFavouritesSuccess,\n  AddMovieToFavouritesPayload,\n  removeMovieFromFavourites,\n  RemoveMovieFromFavouritesPayload,\n  removeMovieFromFavouritesSuccess,\n  addPersonalNoteToFavourite,\n  addPersonalNoteToFavouriteSuccess,\n  AddPersonalNoteToFavouritePayload,\n} from './favourites.actions';\nimport { FunctionWithParametersType } from '@ngrx/store/src/models';\n\n@Injectable()\nexport class FavouriteEffects {\n  getFavourites$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getFavourites.type),\n      concatMap((action) =>\n        of(action).pipe(\n          withLatestFrom(this.store.pipe(select((state) => state.auth)))\n        )\n      ),\n      mergeMap(([action, state]) =>\n        this.favouriteService.getAll(state.loggedUser.localId).pipe(\n          map((favourites) => ({\n            type: getFavouritesSuccess.type,\n            payload: {\n              favourites,\n            },\n          }))\n        )\n      )\n    )\n  );\n\n  addMovieToFavourites$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addMovieToFavourites.type),\n      concatMap((action: { payload: AddMovieToFavouritesPayload }) =>\n        of(action).pipe(\n          withLatestFrom(this.store.pipe(select((state) => state.auth)))\n        )\n      ),\n      mergeMap(([action, state]) =>\n        this.favouriteService\n          .addMovieToFavourites(state.loggedUser.localId, action.payload.movie)\n          .pipe(\n            map(() => ({\n              type: addMovieToFavouritesSuccess.type,\n              payload: {\n                movie: action.payload.movie,\n              },\n            }))\n          )\n      )\n    )\n  );\n\n  removeMovieFromFavourites$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMovieFromFavourites.type),\n      concatMap((action: { payload: RemoveMovieFromFavouritesPayload }) =>\n        of(action).pipe(\n          withLatestFrom(this.store.pipe(select((state) => state.auth)))\n        )\n      ),\n      mergeMap(([action, state]) =>\n        this.favouriteService\n          .removeMovieFromFavourites(\n            state.loggedUser.localId,\n            action.payload.movieId\n          )\n          .pipe(\n            map(() => ({\n              type: removeMovieFromFavouritesSuccess.type,\n              payload: {\n                movieId: action.payload.movieId,\n              },\n            }))\n          )\n      )\n    )\n  );\n\n  addPersonalNoteToFavourite$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addPersonalNoteToFavourite.type),\n      concatMap((action: { payload: AddPersonalNoteToFavouritePayload }) =>\n        of(action).pipe(\n          withLatestFrom(this.store.pipe(select((state) => state.auth)))\n        )\n      ),\n      mergeMap(([action, state]) =>\n        this.favouriteService\n          .addPersonalNoteToFavourite(\n            state.loggedUser.localId,\n            action.payload.movieId,\n            action.payload.personalNote\n          )\n          .pipe(\n            map(() => ({\n              type: addPersonalNoteToFavouriteSuccess.type,\n              payload: {\n                movieId: action.payload.movieId,\n                personalNote: action.payload.personalNote,\n              },\n            }))\n          )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<RootState>,\n    private favouriteService: FavouriteService\n  ) {}\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from './favourites.state';\nimport {\n  getFavouritesSuccess,\n  addMovieToFavouritesSuccess,\n  removeMovieFromFavouritesSuccess,\n  addPersonalNoteToFavouriteSuccess,\n} from './favourites.actions';\n\nconst _favouritesReducer = createReducer(\n  initialState,\n  on(getFavouritesSuccess, (state, { payload }) => ({\n    ...state,\n    favourites: payload.favourites,\n  })),\n  on(addMovieToFavouritesSuccess, (state, { payload }) => ({\n    ...state,\n    favourites: {\n      ...state.favourites,\n      [payload.movie.id]: payload.movie,\n    },\n  })),\n  on(removeMovieFromFavouritesSuccess, (state, { payload }) => {\n    const favourites = { ...state.favourites };\n    delete favourites[payload.movieId];\n\n    return {\n      ...state,\n      favourites: {\n        ...favourites,\n      },\n    };\n  }),\n  on(addPersonalNoteToFavouriteSuccess, (state, { payload }) => {\n    const favourites = { ...state.favourites };\n    const favourite = favourites[payload.movieId];\n\n    return {\n      ...state,\n      favourites: {\n        ...favourites,\n        [payload.movieId]: {\n          ...favourite,\n          personalNote: payload.personalNote,\n        },\n      },\n    };\n  })\n);\n\nexport function favouritesReducer(state, action) {\n  return _favouritesReducer(state, action);\n}\n","import { Favourite } from 'src/app/favourites/shared/types/favourite';\n\nexport interface FavouritesState {\n  favourites: {\n    [key: number]: Favourite;\n  };\n}\n\nexport const initialState: FavouritesState = {\n  favourites: {},\n};\n","import { createAction, props } from '@ngrx/store';\nimport { Movie } from 'src/app/movies/shared/types/movie';\n\nexport const nextPage = createAction('[Movies] Next Page');\nexport const nextPageSuccess = createAction(\n  '[Movies] Next Page Success',\n  props<{\n    payload: {\n      movies: Movie[];\n      page: number;\n    };\n  }>()\n);\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType, Effect } from '@ngrx/effects';\nimport { MovieService } from 'src/app/movies/shared/services/movie/movie.service';\nimport { mergeMap, map, concatMap, withLatestFrom, tap } from 'rxjs/operators';\nimport { nextPage, nextPageSuccess } from './movies.actions';\nimport { Store, select } from '@ngrx/store';\nimport { MoviesState } from './movies.state';\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class MovieEffects {\n  nextPage$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(nextPage.type),\n      concatMap((action) =>\n        of(action).pipe(\n          withLatestFrom(this.store.pipe(select((state) => state.movies)))\n        )\n      ),\n      mergeMap(([action, state]) =>\n        this.movieService.getPopularMovies(state.currentPage).pipe(\n          map((movies) => ({\n            type: nextPageSuccess.type,\n            payload: {\n              movies: [...state.popularMovies, ...movies],\n              page: state.currentPage + 1,\n            },\n          }))\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<{ movies: MoviesState }>,\n    private movieService: MovieService\n  ) {}\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { nextPageSuccess } from './movies.actions';\nimport { initialState } from './movies.state';\n\nconst _moviesReducer = createReducer(\n  initialState,\n  on(nextPageSuccess, (state, { payload }) => ({\n    ...state,\n    popularMovies: payload.movies,\n    currentPage: payload.page,\n  }))\n);\n\nexport function moviesReducer(state, action) {\n  return _moviesReducer(state, action);\n}\n","import { Movie } from 'src/app/movies/shared/types/movie';\n\nexport interface MoviesState {\n  popularMovies: Movie[];\n  currentPage: number;\n}\n\nexport const initialState: MoviesState = {\n  popularMovies: [],\n  currentPage: 1,\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageComponent } from './image/image.component';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\n\n@NgModule({\n  declarations: [ImageComponent],\n  imports: [CommonModule, LazyLoadImageModule],\n  exports: [ImageComponent],\n})\nexport class ImageModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { PosterSize } from 'src/app/movies/shared/types/movie';\n\n@Component({\n  selector: 'app-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss'],\n})\nexport class ImageComponent {\n  baseUrl: string = 'https://image.tmdb.org/t/p/';\n  @Input() posterSize: PosterSize = 'w500';\n  @Input() path: string;\n  @Input() aspectRatio: number = 0;\n  @Input() width: string = '100%';\n  @Input() height: string = '0';\n}\n","<ng-container *ngIf=\"path; else noImg\">\n  <div\n    *ngIf=\"aspectRatio !== 0; else autoHeight\"\n    class=\"image--wrapper\"\n    [style.padding-top.%]=\"aspectRatio * 100\"\n    [style.width]=\"width\"\n    [style.height]=\"height\"\n  >\n    <img [lazyLoad]=\"baseUrl + posterSize + path\" />\n  </div>\n\n  <ng-template #autoHeight>\n    <img class=\"image--autoHeight\" [lazyLoad]=\"baseUrl + posterSize + path\" />\n  </ng-template>\n</ng-container>\n\n<ng-template #noImg>\n  <div class=\"noImg\">\n    <div class=\"noImg--svg\"></div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { ImageModule } from '../image/image.module';\nimport { MovieRatingComponent } from './movie-rating/movie-rating.component';\nimport { RouterModule } from '@angular/router';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [MovieCardComponent, MovieRatingComponent],\n  imports: [CommonModule, ImageModule, RouterModule, PipesModule],\n  exports: [MovieCardComponent, MovieRatingComponent],\n})\nexport class MovieCardModule {}\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { RootState } from 'src/app/store/root.state';\nimport {\n  addMovieToFavourites,\n  removeMovieFromFavourites,\n} from 'src/app/store/favourites/favourites.actions';\nimport { Router } from '@angular/router';\nimport { Subject, Observable } from 'rxjs';\nimport { take, tap } from 'rxjs/operators';\nimport { Movie } from 'src/app/movies/shared/types/movie';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss'],\n})\nexport class MovieCardComponent implements OnInit {\n  @Input() movie: Movie;\n\n  loggedIn$: Observable<boolean>;\n  favourite$: Observable<boolean>;\n\n  constructor(private router: Router, private store: Store<RootState>) {}\n\n  ngOnInit() {\n    this.loggedIn$ = this.store.pipe(select((state) => state.auth.loggedIn));\n    this.favourite$ = this.store.pipe(\n      select(\n        (state) =>\n          state.favourites.favourites &&\n          state.favourites.favourites[this.movie.id] !== undefined\n      )\n    );\n  }\n\n  favourite($event) {\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    this.loggedIn$.pipe(take(1)).subscribe((loggedIn) => {\n      if (loggedIn) {\n        this.store.dispatch(\n          addMovieToFavourites({\n            payload: {\n              movie: {\n                ...this.movie,\n                personalNote: '',\n              },\n            },\n          })\n        );\n      } else {\n        this.router.navigate(['/auth/signIn']);\n      }\n    });\n  }\n\n  unfavourite($event) {\n    $event.stopPropagation();\n    $event.preventDefault();\n\n    this.store.dispatch(\n      removeMovieFromFavourites({\n        payload: {\n          movieId: this.movie.id,\n        },\n      })\n    );\n  }\n}\n","<a [routerLink]=\"['/movies', movie.id]\">\n  <article class=\"movieCard\">\n    <app-image\n      [path]=\"movie.poster_path\"\n      [aspectRatio]=\"3 / 2\"\n      class=\"movieCard--img\"\n    ></app-image>\n    <header class=\"movieCard--title\">{{ movie.original_title }}</header>\n    <div class=\"gray\">{{ movie.release_date | date: \"y\" }}</div>\n    <div class=\"movieCard--rating bold\" *ngIf=\"movie.vote_count > 0\">\n      <app-movie-rating\n        [rating]=\"movie.vote_average\"\n        [styles]=\"{\n          high: 'movieCard--rating-high',\n          normal: 'movieCard--rating-normal',\n          low: 'movieCard--rating-low'\n        }\"\n      ></app-movie-rating>\n    </div>\n    <button\n      *ngIf=\"!(favourite$ | async); else alreadyFavourited\"\n      class=\"movieCard--addToFavourites\"\n      (click)=\"favourite($event)\"\n    >\n      <span class=\"material-icons\">favorite_border</span>\n    </button>\n    <ng-template #alreadyFavourited>\n      <button class=\"movieCard--addToFavourites\" (click)=\"unfavourite($event)\">\n        <span class=\"material-icons\">favorite</span>\n      </button>\n    </ng-template>\n  </article>\n</a>\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-movie-rating',\n  templateUrl: './movie-rating.component.html',\n  styleUrls: ['./movie-rating.component.scss'],\n})\nexport class MovieRatingComponent {\n  @Input() rating: number;\n  @Input() styles: {\n    high: string;\n    normal: string;\n    low: string;\n  };\n  @Input() suffix: string = '%';\n\n  @HostBinding('className') get className() {\n    if (this.styles) {\n      if (this.rating >= 7) {\n        return this.styles.high;\n      } else if (this.rating >= 4) {\n        return this.styles.normal;\n      } else {\n        return this.styles.low;\n      }\n    }\n  }\n}\n","<div>{{ rating | ratingPercent }}{{ suffix }}</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReadMoreComponent } from './read-more/read-more.component';\nimport { LinkyModule } from 'ngx-linky';\nimport { PipesModule } from '../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [ReadMoreComponent],\n  imports: [CommonModule, LinkyModule],\n  exports: [ReadMoreComponent],\n})\nexport class ReadMoreModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-read-more',\n  templateUrl: './read-more.component.html',\n  styleUrls: ['./read-more.component.scss'],\n})\nexport class ReadMoreComponent implements OnInit {\n  @Input() content: string;\n  @Input() length: number;\n\n  @Output() readMore = new EventEmitter();\n\n  showedContent: string;\n\n  show: boolean = false;\n\n  ngOnInit() {\n    this.showLess();\n  }\n\n  showMore() {\n    this.readMore.emit();\n    this.showedContent = this.content;\n    this.show = true;\n  }\n\n  showLess() {\n    if (this.content.length > this.length && this.length >= 0) {\n      this.showedContent = this.content.slice(0, this.length - 4) + ' ...';\n    } else {\n      this.showedContent = this.content;\n    }\n    this.show = false;\n  }\n}\n","<div class=\"readMore\">\n  <div class=\"readMore--content\" [innerHTML]=\"showedContent\"></div>\n  <div *ngIf=\"content.length > length && length >= 0\" class=\"readMore--link\">\n    <a *ngIf=\"!show; else showLessBtn\" (click)=\"showMore()\">Show More</a>\n    <ng-template #showLessBtn>\n      <a (click)=\"showLess()\">Show Less</a>\n    </ng-template>\n  </div>\n</div>\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ElementRef,\n  HostListener,\n} from '@angular/core';\n\n@Directive({\n  selector: '[appClickOutside]',\n})\nexport class ClickOutsideDirective {\n  @Output() appClickOutside = new EventEmitter<void>();\n\n  constructor(private elementRef: ElementRef) {}\n\n  @HostListener('document:click', ['$event.target'])\n  public onClick(target) {\n    const clickedInside = this.elementRef.nativeElement.contains(target);\n    if (!clickedInside) {\n      this.appClickOutside.emit();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickOutsideDirective } from './click-outside/click-outside.directive';\n\n@NgModule({\n  declarations: [ClickOutsideDirective],\n  imports: [CommonModule],\n  exports: [ClickOutsideDirective],\n})\nexport class DirectivesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'duration',\n})\nexport class DurationPipe implements PipeTransform {\n  transform(value: number): string {\n    const hours = Math.floor(value / 60);\n    const minutes = value - hours * 60;\n\n    return `${hours}h ${minutes}m`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Genre } from 'src/app/movies/shared/types/movieOverview';\n\n@Pipe({\n  name: 'genres',\n})\nexport class GenresPipe implements PipeTransform {\n  transform(value: Genre[]): string {\n    return value.map((genre) => genre.name).join(', ');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as MarkdownIt from 'markdown-it';\n\n@Pipe({\n  name: 'markdown',\n})\nexport class MarkdownPipe implements PipeTransform {\n  transform(value: string): string {\n    const html = new MarkdownIt({\n      linkify: true,\n    }).render(value);\n    if (html.startsWith('<p>')) {\n      return html.slice(3, -5);\n    }\n\n    return html;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RatingPercentPipe } from './rating-percent/rating-percent.pipe';\nimport { DurationPipe } from './duration/duration.pipe';\nimport { MarkdownPipe } from './markdown/markdown.pipe';\nimport { GenresPipe } from './genres/genres.pipe';\n\n@NgModule({\n  declarations: [RatingPercentPipe, DurationPipe, MarkdownPipe, GenresPipe],\n  imports: [CommonModule],\n  exports: [RatingPercentPipe, DurationPipe, MarkdownPipe, GenresPipe],\n})\nexport class PipesModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ratingPercent',\n})\nexport class RatingPercentPipe implements PipeTransform {\n  transform(value: number, min: number = 0, max: number = 10): number {\n    return Math.round(((value - min) / (max - min)) * 100);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { apiKey } from 'src/app/config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestService {\n  private headers: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json; charset=utf-8',\n  });\n\n  constructor(private http: HttpClient) {}\n\n  public get<T>(path: string, query: Record<string, string> = {}) {\n    return this.http.get<T>(path, {\n      params: query,\n    });\n  }\n\n  public post<T, K>(path: string, body: K, query: Record<string, string> = {}) {\n    return this.http.post<T>(path, body, {\n      params: query,\n      headers: this.headers,\n    });\n  }\n\n  public put<T, K>(path: string, body: K, query: Record<string, string> = {}) {\n    return this.http.put<T>(path, body, {\n      params: query,\n      headers: this.headers,\n    });\n  }\n\n  public patch<T, K>(\n    path: string,\n    body: K,\n    query: Record<string, string> = {}\n  ) {\n    return this.http.patch<T>(path, body, {\n      params: query,\n      headers: this.headers,\n    });\n  }\n\n  public delete<T, K>(path: string, query: Record<string, string> = {}) {\n    return this.http.delete<T>(path, {\n      params: query,\n      headers: this.headers,\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}